; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--cpp11 --list --debug -c --asm --interleave --exceptions --protect_stack -o.\out\debugv5\debug.o --asm_dir=.\Lst\DebugV5\ --list_dir=.\Lst\DebugV5\ --depend=.\out\debugv5\debug.d --cpu=Cortex-M4 --apcs=interwork --no_unaligned_access -O0 --diag_suppress=9931 -I.\Inc -I.\Inc\Debug -I.\Inc\Cortex -I.\Inc\Drivers -I.\Inc\Utilities -D__UVISION_VERSION=527 -DSTM32F429xx -DCORTEX_M=4 -DDEBUG --omf_browse=.\out\debugv5\debug.crf --no_rtti Src\Debug\Debug.cpp]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _Z14StackCheckInitv PROC ; StackCheckInit()
;;;15     
;;;16     void StackCheckInit() noexcept 
000000  f44f2025          MOV      r0,#0xa5000
;;;17     {
;;;18       StackGuard_1 = STACK_GUARD_VALUE;
000004  497a              LDR      r1,|L1.496|
000006  6008              STR      r0,[r1,#0]  ; StackGuard_1
;;;19       StackGuard_2 = STACK_GUARD_VALUE;
000008  497a              LDR      r1,|L1.500|
00000a  6008              STR      r0,[r1,#0]  ; StackGuard_2
;;;20     }
00000c  4770              BX       lr
;;;21     
                          ENDP

                  _Z12SaveItmChan0h PROC ; SaveItmChan0(unsigned char)
;;;94     
;;;95     int SaveItmChan0(BYTE const c) noexcept 
00000e  4601              MOV      r1,r0
;;;96     {
;;;97       unsigned retry = 100000U;
000010  4b79              LDR      r3,|L1.504|
;;;98       
;;;99       while ( rbITM.PORT[0].asWord == 0 ) 
000012  e004              B        |L1.30|
                  |L1.20|
;;;100      {
;;;101        if ( --retry == 0U )
000014  1e58              SUBS     r0,r3,#1
000016  1e03              SUBS     r3,r0,#0
000018  d101              BNE      |L1.30|
;;;102          return -1;
00001a  1e40              SUBS     r0,r0,#1
                  |L1.28|
;;;103      }
;;;104    
;;;105      rbITM.PORT[0].asByte = c;
;;;106    
;;;107      return c;
;;;108    }
00001c  4770              BX       lr
                  |L1.30|
00001e  4877              LDR      r0,|L1.508|
000020  6800              LDR      r0,[r0,#0]            ;99  ; rbITM
000022  2800              CMP      r0,#0                 ;99
000024  d0f6              BEQ      |L1.20|
000026  4875              LDR      r0,|L1.508|
000028  7001              STRB     r1,[r0,#0]            ;105
00002a  460a              MOV      r2,r1                 ;107
00002c  4610              MOV      r0,r2                 ;107
00002e  e7f5              B        |L1.28|
;;;109    
                          ENDP

                  _Z7ItmPutSPKc PROC ; ItmPutS(const char*)
;;;110    __weak 
;;;111    void ItmPutS(char const * text) noexcept 
000030  b570              PUSH     {r4-r6,lr}
;;;112    {
000032  4604              MOV      r4,r0
;;;113      if ( TestItmChan0() )
000034  f7fffffe          BL       _Z12TestItmChan0v ; TestItmChan0()
000038  b178              CBZ      r0,|L1.90|
;;;114      {
;;;115        SaveItmChan0('\r');
00003a  200d              MOVS     r0,#0xd
00003c  f7fffffe          BL       _Z12SaveItmChan0h ; SaveItmChan0(unsigned char)
;;;116        SaveItmChan0('\n');
000040  200a              MOVS     r0,#0xa
000042  f7fffffe          BL       _Z12SaveItmChan0h ; SaveItmChan0(unsigned char)
;;;117    
;;;118        if ( text != nullptr )
000046  b144              CBZ      r4,|L1.90|
;;;119        {
;;;120          char c;
;;;121          
;;;122          while ( (c = *text++) != '\0' )
000048  e002              B        |L1.80|
                  |L1.74|
;;;123          {
;;;124            SaveItmChan0(c);
00004a  4628              MOV      r0,r5
00004c  f7fffffe          BL       _Z12SaveItmChan0h ; SaveItmChan0(unsigned char)
                  |L1.80|
000050  f8145b01          LDRB     r5,[r4],#1            ;122
000054  2d00              CMP      r5,#0                 ;122
000056  d1f8              BNE      |L1.74|
;;;125          }
;;;126        }
000058  bf00              NOP      
                  |L1.90|
;;;127      }
;;;128    }
00005a  bd70              POP      {r4-r6,pc}
;;;129    
                          ENDP

                  _Z10StackCheckv PROC ; StackCheck()
;;;21     
;;;22     void StackCheck() noexcept 
00005c  b510              PUSH     {r4,lr}
;;;23     {
;;;24       if ( StackGuard_1 != STACK_GUARD_VALUE
00005e  4864              LDR      r0,|L1.496|
000060  6800              LDR      r0,[r0,#0]  ; StackGuard_1
000062  f5b02f25          CMP      r0,#0xa5000
000066  d104              BNE      |L1.114|
;;;25       ||   StackGuard_2 != STACK_GUARD_VALUE )
000068  4862              LDR      r0,|L1.500|
00006a  6800              LDR      r0,[r0,#0]  ; StackGuard_2
00006c  f5b02f25          CMP      r0,#0xa5000
000070  d005              BEQ      |L1.126|
                  |L1.114|
;;;26       {
;;;27         ITM_PUTS("Stack corrupted");
000072  a063              ADR      r0,|L1.512|
000074  f7fffffe          BL       _Z7ItmPutSPKc ; ItmPutS(const char*)
;;;28         DEBUG_BREAK(3);
000078  be03              BKPT     #3
;;;29         
;;;30         Cortex::Reset();
00007a  f7fffffe          BL       _ZN6Cortex5ResetEv ; Cortex::Reset()
                  |L1.126|
;;;31       }
;;;32       /*
;;;33       if ( ! Cortex::AltStackIsOk() )
;;;34       {
;;;35         ITM_PUTS("Stack corrupted [ALT]");
;;;36         DEBUG_BREAK(3);
;;;37         
;;;38         Cortex::Reset();
;;;39       }*/
;;;40     }
00007e  bd10              POP      {r4,pc}
;;;41     
                          ENDP

                  _ZN30_INTERNAL_9_Debug_cpp_a009ace310CheckRangeEjjj PROC ; [local to Debug_cpp]::CheckRange(unsigned, unsigned, unsigned)
;;;42     static inline bool CheckRange(WORD const addr, WORD const start, WORD const length) noexcept
000080  b510              PUSH     {r4,lr}
;;;43     {
000082  4603              MOV      r3,r0
;;;44     	return addr >= start && addr < (start + length);
000084  428b              CMP      r3,r1
000086  d304              BCC      |L1.146|
000088  188c              ADDS     r4,r1,r2
00008a  429c              CMP      r4,r3
00008c  d901              BLS      |L1.146|
00008e  2401              MOVS     r4,#1
000090  e000              B        |L1.148|
                  |L1.146|
000092  2400              MOVS     r4,#0
                  |L1.148|
000094  4620              MOV      r0,r4
;;;45     }
000096  bd10              POP      {r4,pc}
;;;46     
                          ENDP

                  _Z14IsValidPointerPVKv PROC ; IsValidPointer(const volatile void*)
;;;47     __weak bool IsValidPointer(void volatile const * const ptr) noexcept 
000098  b570              PUSH     {r4-r6,lr}
;;;48     {
00009a  4604              MOV      r4,r0
;;;49     	WORD const addr = reinterpret_cast<WORD>(ptr);
00009c  4625              MOV      r5,r4
;;;50     	
;;;51     	if ( CheckRange(addr, IRAM1_START, IRAM1_LENGTH) 
00009e  f44f3200          MOV      r2,#0x20000
0000a2  0311              LSLS     r1,r2,#12
0000a4  4628              MOV      r0,r5
0000a6  f7fffffe          BL       _ZN30_INTERNAL_9_Debug_cpp_a009ace310CheckRangeEjjj ; [local to Debug_cpp]::CheckRange(unsigned, unsigned, unsigned)
0000aa  b968              CBNZ     r0,|L1.200|
;;;52     	||   CheckRange(addr, IRAM2_START, IRAM2_LENGTH) 
0000ac  f44f3280          MOV      r2,#0x10000
0000b0  0311              LSLS     r1,r2,#12
0000b2  4628              MOV      r0,r5
0000b4  f7fffffe          BL       _ZN30_INTERNAL_9_Debug_cpp_a009ace310CheckRangeEjjj ; [local to Debug_cpp]::CheckRange(unsigned, unsigned, unsigned)
0000b8  b930              CBNZ     r0,|L1.200|
;;;53     	||   CheckRange(addr, IROM1_START, IROM1_LENGTH) ) 
0000ba  f44f1280          MOV      r2,#0x100000
0000be  01d1              LSLS     r1,r2,#7
0000c0  4628              MOV      r0,r5
0000c2  f7fffffe          BL       _ZN30_INTERNAL_9_Debug_cpp_a009ace310CheckRangeEjjj ; [local to Debug_cpp]::CheckRange(unsigned, unsigned, unsigned)
0000c6  b108              CBZ      r0,|L1.204|
                  |L1.200|
;;;54     		return true;
0000c8  2001              MOVS     r0,#1
                  |L1.202|
;;;55     	
;;;56     	return false;
;;;57     }
0000ca  bd70              POP      {r4-r6,pc}
                  |L1.204|
0000cc  2000              MOVS     r0,#0                 ;56
0000ce  e7fc              B        |L1.202|
;;;58     
                          ENDP

                  _Z6ItmFmtv PROC ; ItmFmt()
;;;150    
;;;151    Formatter & ItmFmt() noexcept
0000d0  b510              PUSH     {r4,lr}
;;;152    {
0000d2  484f              LDR      r0,|L1.528|
0000d4  7800              LDRB     r0,[r0,#0]  ; _ZGV_ZZ6ItmFmtvE4sink
0000d6  f0000001          AND      r0,r0,#1
0000da  b970              CBNZ     r0,|L1.250|
0000dc  484c              LDR      r0,|L1.528|
0000de  f7fffffe          BL       __cxa_guard_acquire
0000e2  b150              CBZ      r0,|L1.250|
;;;153      static SinkForItm sink;
0000e4  484b              LDR      r0,|L1.532|
0000e6  f7fffffe          BL       _ZN10SinkForItmC1Ev ; SinkForItm::SinkForItm()
0000ea  4604              MOV      r4,r0
0000ec  4a4a              LDR      r2,|L1.536|
0000ee  494b              LDR      r1,|L1.540|
0000f0  f7fffffe          BL       __aeabi_atexit
0000f4  4846              LDR      r0,|L1.528|
0000f6  f7fffffe          BL       __cxa_guard_release
                  |L1.250|
0000fa  4849              LDR      r0,|L1.544|
0000fc  7800              LDRB     r0,[r0,#0]  ; _ZGV_ZZ6ItmFmtvE3fmt
0000fe  f0000001          AND      r0,r0,#1
000102  b978              CBNZ     r0,|L1.292|
000104  4846              LDR      r0,|L1.544|
000106  f7fffffe          BL       __cxa_guard_acquire
00010a  b158              CBZ      r0,|L1.292|
;;;154      static Formatter fmt(sink);
00010c  4941              LDR      r1,|L1.532|
00010e  4845              LDR      r0,|L1.548|
000110  f7fffffe          BL       _ZN9FormatterC1ERNS_5ISinkE ; Formatter::Formatter(Formatter::ISink&)
000114  4604              MOV      r4,r0
000116  4a40              LDR      r2,|L1.536|
000118  4943              LDR      r1,|L1.552|
00011a  f7fffffe          BL       __aeabi_atexit
00011e  4840              LDR      r0,|L1.544|
000120  f7fffffe          BL       __cxa_guard_release
                  |L1.292|
;;;155    
;;;156      ItmPutS(nullptr);
000124  2000              MOVS     r0,#0
000126  f7fffffe          BL       _Z7ItmPutSPKc ; ItmPutS(const char*)
;;;157      
;;;158      return fmt;
00012a  483e              LDR      r0,|L1.548|
;;;159    }
00012c  bd10              POP      {r4,pc}
;;;160    
                          ENDP

                  _Z15AssertionFailedPKcS0_jS0_ PROC ; AssertionFailed(const char*, const char*, unsigned, const char*)
;;;59     [[noreturn]]
;;;60     __weak void AssertionFailed(char const expr[], char const file[], unsigned line, char const func[]) noexcept 
00012e  b53f              PUSH     {r0-r5,lr}
;;;61     {
000130  b089              SUB      sp,sp,#0x24
000132  4604              MOV      r4,r0
;;;62       ITM_PRINT("*** ", file, '(', Formatter::Digits(4), line, ") ", func, ' ', Formatter::AsTxt(expr)); 
000134  483d              LDR      r0,|L1.556|
000136  6800              LDR      r0,[r0,#0]  ; <Data7>
000138  9007              STR      r0,[sp,#0x1c]
00013a  4621              MOV      r1,r4
00013c  a805              ADD      r0,sp,#0x14
00013e  f7fffffe          BL       _ZN9Formatter5AsTxtC1EPKc ; Formatter::AsTxt::AsTxt(const char*)
000142  4605              MOV      r5,r0
000144  2028              MOVS     r0,#0x28
000146  f88d0020          STRB     r0,[sp,#0x20]
00014a  2020              MOVS     r0,#0x20
00014c  f88d0018          STRB     r0,[sp,#0x18]
000150  a806              ADD      r0,sp,#0x18
000152  a90c              ADD      r1,sp,#0x30
000154  a236              ADR      r2,|L1.560|
000156  e9cd0503          STRD     r0,r5,[sp,#0xc]
00015a  e9cd2101          STRD     r2,r1,[sp,#4]
00015e  a80b              ADD      r0,sp,#0x2c
000160  ab07              ADD      r3,sp,#0x1c
000162  aa08              ADD      r2,sp,#0x20
000164  a90a              ADD      r1,sp,#0x28
000166  9000              STR      r0,[sp,#0]
000168  a032              ADR      r0,|L1.564|
00016a  f7fffffe          BL       _Z8ItmPrintIJA5_cPKccN9Formatter6DigitsEjA3_cS2_cNS3_5AsTxtEEEvDpRKT_ ; void ItmPrint<<char[5], const char*, char, Formatter::Digits, unsigned, char[3], const char*, char, Formatter::AsTxt>>(const T1&...)
;;;63       
;;;64       for ( ;; ) 
00016e  bf00              NOP      
;;;65       { 
;;;66         DEBUG_BREAK(3); 
000170  be03              BKPT     #3
;;;67         Cortex::Reset(); 
000172  f7fffffe          BL       _ZN6Cortex5ResetEv ; Cortex::Reset()
;;;68       }
;;;69     }
;;;70     
                          ENDP

                  _Z15ProgramAbortionPKcS0_jS0_ PROC ; ProgramAbortion(const char*, const char*, unsigned, const char*)
;;;71     [[noreturn]]
;;;72     __weak void ProgramAbortion(char const expr[], char const file[], unsigned line, char const func[]) noexcept 
000176  b53f              PUSH     {r0-r5,lr}
;;;73     {
000178  b089              SUB      sp,sp,#0x24
00017a  4604              MOV      r4,r0
;;;74       ITM_PRINT("*** ", file, '(', Formatter::Digits(4), line, ") ", func, ' ', Formatter::AsTxt(expr)); 
00017c  482b              LDR      r0,|L1.556|
00017e  1d00              ADDS     r0,r0,#4
000180  6800              LDR      r0,[r0,#0]  ; <Data12>
000182  9007              STR      r0,[sp,#0x1c]
000184  4621              MOV      r1,r4
000186  a805              ADD      r0,sp,#0x14
000188  f7fffffe          BL       _ZN9Formatter5AsTxtC1EPKc ; Formatter::AsTxt::AsTxt(const char*)
00018c  4605              MOV      r5,r0
00018e  2028              MOVS     r0,#0x28
000190  f88d0020          STRB     r0,[sp,#0x20]
000194  2020              MOVS     r0,#0x20
000196  f88d0018          STRB     r0,[sp,#0x18]
00019a  a806              ADD      r0,sp,#0x18
00019c  a90c              ADD      r1,sp,#0x30
00019e  a224              ADR      r2,|L1.560|
0001a0  e9cd0503          STRD     r0,r5,[sp,#0xc]
0001a4  e9cd2101          STRD     r2,r1,[sp,#4]
0001a8  a80b              ADD      r0,sp,#0x2c
0001aa  ab07              ADD      r3,sp,#0x1c
0001ac  aa08              ADD      r2,sp,#0x20
0001ae  a90a              ADD      r1,sp,#0x28
0001b0  9000              STR      r0,[sp,#0]
0001b2  a020              ADR      r0,|L1.564|
0001b4  f7fffffe          BL       _Z8ItmPrintIJA5_cPKccN9Formatter6DigitsEjA3_cS2_cNS3_5AsTxtEEEvDpRKT_ ; void ItmPrint<<char[5], const char*, char, Formatter::Digits, unsigned, char[3], const char*, char, Formatter::AsTxt>>(const T1&...)
;;;75       
;;;76       for ( ;; ) 
0001b8  bf00              NOP      
;;;77       { 
;;;78         DEBUG_BREAK(3); 
0001ba  be03              BKPT     #3
;;;79         Cortex::Reset(); 
0001bc  f7fffffe          BL       _ZN6Cortex5ResetEv ; Cortex::Reset()
;;;80       }
;;;81     }
;;;82     
                          ENDP

                  _Z8sendchari PROC ; sendchar(int)
;;;160    
;;;161    int sendchar(int const c) noexcept 
0001c0  b570              PUSH     {r4-r6,lr}
;;;162    {
0001c2  4604              MOV      r4,r0
;;;163      if ( TestItmChan0() )
0001c4  f7fffffe          BL       _Z12TestItmChan0v ; TestItmChan0()
0001c8  b110              CBZ      r0,|L1.464|
;;;164        SaveItmChan0((BYTE)c);
0001ca  b2e0              UXTB     r0,r4
0001cc  f7fffffe          BL       _Z12SaveItmChan0h ; SaveItmChan0(unsigned char)
                  |L1.464|
;;;165    
;;;166      return c;
0001d0  4625              MOV      r5,r4
0001d2  4628              MOV      r0,r5
;;;167    }
0001d4  bd70              POP      {r4-r6,pc}
;;;168    
                          ENDP

                  _ZN30_INTERNAL_9_Debug_cpp_a009ace39LocalInitEv PROC ; [local to Debug_cpp]::LocalInit()
;;;169    static __attribute__((constructor(101))) void LocalInit(void) noexcept 
0001d6  b510              PUSH     {r4,lr}
;;;170    {
;;;171      STACK_CHECK_INIT();
0001d8  f7fffffe          BL       _Z14StackCheckInitv ; StackCheckInit()
;;;172    
;;;173    	static WORD volatile dbgmcuCr LOCATE_AT(0xE0042004);
;;;174    
;;;175    	trace = (dbgmcuCr & 0x20U) != 0U;
0001dc  4817              LDR      r0,|L1.572|
0001de  6800              LDR      r0,[r0,#0]  ; _ZZN30_INTERNAL_9_Debug_cpp_a009ace39LocalInitEvE8dbgmcuCr
0001e0  f3c01040          UBFX     r0,r0,#5,#1
0001e4  4916              LDR      r1,|L1.576|
0001e6  7008              STRB     r0,[r1,#0]
;;;176    
;;;177      ITM_PUTS("ITM trace initialized");  
0001e8  a016              ADR      r0,|L1.580|
0001ea  f7fffffe          BL       _Z7ItmPutSPKc ; ItmPutS(const char*)
;;;178    }
0001ee  bd10              POP      {r4,pc}
;;;179    
                          ENDP

                  |L1.496|
                          DCD      StackGuard_1
                  |L1.500|
                          DCD      StackGuard_2
                  |L1.504|
                          DCD      0x000186a0
                  |L1.508|
                          DCD      rbITM
                  |L1.512|
000200  53746163          DCB      "Stack corrupted",0
000204  6b20636f
000208  72727570
00020c  74656400
                  |L1.528|
                          DCD      _ZGV_ZZ6ItmFmtvE4sink
                  |L1.532|
                          DCD      _ZZ6ItmFmtvE4sink ; ItmFmt()::sink
                  |L1.536|
                          DCD      __dso_handle
                  |L1.540|
                          DCD      _ZN10SinkForItmD1Ev ; SinkForItm::~SinkForItm()
                  |L1.544|
                          DCD      _ZGV_ZZ6ItmFmtvE3fmt
                  |L1.548|
                          DCD      _ZZ6ItmFmtvE3fmt ; ItmFmt()::fmt
                  |L1.552|
                          DCD      _ZN9FormatterD1Ev ; Formatter::~Formatter()
                  |L1.556|
                          DCD      ||.constdata||
                  |L1.560|
000230  292000            DCB      ") ",0
000233  00                DCB      0
                  |L1.564|
000234  2a2a2a20          DCB      "*** ",0
000238  00      
000239  00                DCB      0
00023a  00                DCB      0
00023b  00                DCB      0
                  |L1.572|
                          DCD      _ZZN30_INTERNAL_9_Debug_cpp_a009ace39LocalInitEvE8dbgmcuCr ; [local to Debug_cpp]::LocalInit()::dbgmcuCr
                  |L1.576|
                          DCD      trace
                  |L1.580|
000244  49544d20          DCB      "ITM trace initialized",0
000248  74726163
00024c  6520696e
000250  69746961
000254  6c697a65
000258  6400    
00025a  00                DCB      0
00025b  00                DCB      0

                          AREA ||.text.clean||, CODE, READONLY, ALIGN=2

000000  4804              LDR      r0,|L2.20|
000002  f7fffffe          BL       __cxa_guard_abort
                  |L2.6|
000006  f7fffffe          BL       __cxa_end_cleanup
00000a  4803              LDR      r0,|L2.24|
00000c  f7fffffe          BL       __cxa_guard_abort
000010  e7f9              B        |L2.6|
000012  0000              DCW      0x0000
                  |L2.20|
                          DCD      _ZGV_ZZ6ItmFmtvE4sink
                  |L2.24|
                          DCD      _ZGV_ZZ6ItmFmtvE3fmt

                          AREA ||.ARM.__AT_0xE0042004||, DATA, NOINIT, ALIGN=2

                  _ZZN30_INTERNAL_9_Debug_cpp_a009ace39LocalInitEvE8dbgmcuCr ; [local to Debug_cpp]::LocalInit()::dbgmcuCr
                          %        4

                          AREA ||.ARM.exidx||, LINKORDER=||.text||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          REQUIRE __aeabi_unwind_cpp_pr0
                          DCD      0x000000d0
                          RELOC 42, ||.text||
                          DCD      0x00000000
                          RELOC 42, ||.extab._Z6ItmFmtv||

                          AREA ||area_number.5||, LINKORDER=||.text.clean||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.5||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||.text.clean||
                          DCD      0x00000001

                          AREA ||.ARM.extab||, DATA, READONLY, ALIGN=2

                          REQUIRE __cxa_call_unexpected
                          REQUIRE __cxa_call_terminate
                  ||.extab._Z6ItmFmtv||
                          DCD      0x80a8b0b0
000004  00060024          DCW      0x0006,0x0024
                          DCD      0x00000001
                          RELOC 42, ||.text.clean||
00000c  0006004e          DCW      0x0006,0x004e
                          DCD      0x0000000b
                          RELOC 42, ||.text.clean||
000014  00440013          DCW      0x0044,0x0013
                          DCD      0x80000000
                          DCD      0x00000001
                          RELOC 42, __ARM_common_noexcept_landing
                          DCD      0x00000000

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  _ZZ6ItmFmtvE3fmt ; ItmFmt()::fmt
                          %        28

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                          DCD      0x00000004
                          DCD      0x00000004
                  ||<Data1>||
000008  0000              DCB      0x00,0x00

                          AREA ||.data||, DATA, ALIGN=2

                  trace
000000  00000000          DCB      0x00,0x00,0x00,0x00
                  _ZGV_ZZ6ItmFmtvE3fmt
                          DCD      0x00000000
                  _ZGV_ZZ6ItmFmtvE4sink
                          DCD      0x00000000
                  _ZZ6ItmFmtvE4sink ; ItmFmt()::sink
                          DCD      0x00000000

                          AREA ||.init_array.00101||, DATA, READONLY, INIT_ARRAY, ALIGN=2

                          DCD      0x00000000 ; [local to Debug_cpp]::LocalInit()
                          RELOC 38, _ZN30_INTERNAL_9_Debug_cpp_a009ace39LocalInitEv

                          AREA ||.constdata__ZZNK9Formatter5AsTxt8ToStringERS_Es||, COMGROUP=_ZZNK9Formatter5AsTxt8ToStringERS_Es, DATA, READONLY, ALIGN=0

                  _ZZNK9Formatter5AsTxt8ToStringERS_Es ; Formatter::AsTxt::ToString(Formatter&) const::string
000000  6e756c6c          DCB      0x6e,0x75,0x6c,0x6c
000004  70747200          DCB      0x70,0x74,0x72,0x00

                          AREA ||i._Z12TestItmChan0v||, COMGROUP=_Z12TestItmChan0v, CODE, READONLY, ALIGN=2

                  _Z12TestItmChan0v PROC ; TestItmChan0()
;;;89     
;;;90     inline bool TestItmChan0() noexcept 
000000  4909              LDR      r1,|L25.40|
;;;91     {
;;;92       return trace && (rbITM.TCR & MASK_ITM_TCR_ITMENA) != 0U && (rbITM.TER & MASK_ITM_TER_ENAPORT00) != 0U;
000002  7809              LDRB     r1,[r1,#0]  ; trace
000004  b169              CBZ      r1,|L25.34|
000006  4909              LDR      r1,|L25.44|
000008  f8d11e80          LDR      r1,[r1,#0xe80]  ; rbITM
00000c  f0010101          AND      r1,r1,#1
000010  b139              CBZ      r1,|L25.34|
000012  4906              LDR      r1,|L25.44|
000014  f8d11e00          LDR      r1,[r1,#0xe00]  ; rbITM
000018  f0010101          AND      r1,r1,#1
00001c  b109              CBZ      r1,|L25.34|
00001e  2101              MOVS     r1,#1
000020  e000              B        |L25.36|
                  |L25.34|
000022  2100              MOVS     r1,#0
                  |L25.36|
000024  4608              MOV      r0,r1
;;;93     }
000026  4770              BX       lr
;;;94     
                          ENDP

                  |L25.40|
                          DCD      trace
                  |L25.44|
                          DCD      rbITM

                          AREA ||area_number.26||, COMGROUP=_Z12TestItmChan0v, LINKORDER=||i._Z12TestItmChan0v||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.26||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._Z12TestItmChan0v||
                          DCD      0x00000001

                          AREA ||t._Z8ItmPrintIJA5_cPKccN9Formatter6DigitsEjA3_cS2_cNS3_5AsTxtEEEvDpRKT_||, COMGROUP=_Z8ItmPrintIJA5_cPKccN9Formatter6DigitsEjA3_cS2_cNS3_5AsTxtEEEvDpRKT_, CODE, READONLY, ALIGN=1

                  _Z8ItmPrintIJA5_cPKccN9Formatter6DigitsEjA3_cS2_cNS3_5AsTxtEEEvDpRKT_ PROC ; void ItmPrint<<char[5], const char*, char, Formatter::Digits, unsigned, char[3], const char*, char, Formatter::AsTxt>>(const T1&...)
;;;85     template<typename ... ARGS> 
;;;86     inline void ItmPrint(ARGS const & ... args) noexcept
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;87     {
000004  b087              SUB      sp,sp,#0x1c
000006  4604              MOV      r4,r0
000008  460d              MOV      r5,r1
00000a  4616              MOV      r6,r2
00000c  461f              MOV      r7,r3
00000e  e9ddab12          LDRD     r10,r11,[sp,#0x48]
000012  e9dd8910          LDRD     r8,r9,[sp,#0x40]
;;;88       auto & fmt(ItmFmt());
000016  f7fffffe          BL       _Z6ItmFmtv ; ItmFmt()
00001a  9006              STR      r0,[sp,#0x18]
;;;89       
;;;90       fmt.Print(args ...);
00001c  9814              LDR      r0,[sp,#0x50]
00001e  4633              MOV      r3,r6
000020  462a              MOV      r2,r5
000022  4621              MOV      r1,r4
000024  e88d0f80          STM      sp,{r7-r11}
000028  9005              STR      r0,[sp,#0x14]
00002a  9806              LDR      r0,[sp,#0x18]
00002c  f7fffffe          BL       _ZN9Formatter5PrintIA5_cJPKccNS_6DigitsEjA3_cS3_cNS_5AsTxtEEEEvRKT_DpRKT0_ ; void Formatter::Print<char[5], <const char*, char, Formatter::Digits, unsigned, char[3], const char*, char, Formatter::AsTxt>>(const T1&, const T2&...)
;;;91       
;;;92       STACK_CHECK();
000030  f7fffffe          BL       _Z10StackCheckv ; StackCheck()
;;;93     }
000034  b007              ADD      sp,sp,#0x1c
000036  e8bd8ff0          POP      {r4-r11,pc}
;;;94     #  include <Cortex.h>
                          ENDP


                          AREA ||area_number.34||, COMGROUP=_Z8ItmPrintIJA5_cPKccN9Formatter6DigitsEjA3_cS2_cNS3_5AsTxtEEEvDpRKT_, LINKORDER=||t._Z8ItmPrintIJA5_cPKccN9Formatter6DigitsEjA3_cS2_cNS3_5AsTxtEEEvDpRKT_||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.34||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||t._Z8ItmPrintIJA5_cPKccN9Formatter6DigitsEjA3_cS2_cNS3_5AsTxtEEEvDpRKT_||
                          DCD      0x00000001

                          AREA ||i._ZN9Formatter5AsTxtC1EPKc||, COMGROUP=_ZN9Formatter5AsTxtC1EPKc, CODE, READONLY, ALIGN=1

                  _ZN9Formatter5AsTxtC2EPKc                  ; Alternate entry point ; Formatter::AsTxt::AsTxt__sub_object(const char*)
                  _ZN9Formatter5AsTxtC1EPKc PROC ; Formatter::AsTxt::AsTxt(const char*)
;;;153        explicit
;;;154        constexpr AsTxt(char const arg[])  noexcept : text(arg)   { }
;;;155        explicit
000000  6001              STR      r1,[r0,#0]
000002  4770              BX       lr
                          ENDP


                          AREA ||area_number.42||, COMGROUP=_ZN9Formatter5AsTxtC1EPKc, LINKORDER=||i._ZN9Formatter5AsTxtC1EPKc||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.42||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN9Formatter5AsTxtC1EPKc||
                          DCD      0x00000001

                          AREA ||t._ZN9Formatter5PrintIA5_cJPKccNS_6DigitsEjA3_cS3_cNS_5AsTxtEEEEvRKT_DpRKT0_||, COMGROUP=_ZN9Formatter5PrintIA5_cJPKccNS_6DigitsEjA3_cS3_cNS_5AsTxtEEEEvRKT_DpRKT0_, CODE, READONLY, ALIGN=1

                  _ZN9Formatter5PrintIA5_cJPKccNS_6DigitsEjA3_cS3_cNS_5AsTxtEEEEvRKT_DpRKT0_ PROC ; void Formatter::Print<char[5], <const char*, char, Formatter::Digits, unsigned, char[3], const char*, char, Formatter::AsTxt>>(const T1&, const T2&...)
;;;439    
;;;440      template<typename TYPE, typename ... ARGS> void Print(TYPE const & obj, ARGS const & ... args) noexcept
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;441      {
000004  b085              SUB      sp,sp,#0x14
000006  4606              MOV      r6,r0
000008  460f              MOV      r7,r1
00000a  4614              MOV      r4,r2
00000c  461d              MOV      r5,r3
00000e  e9ddab11          LDRD     r10,r11,[sp,#0x44]
000012  e9dd890f          LDRD     r8,r9,[sp,#0x3c]
;;;442        Print(obj);
000016  4639              MOV      r1,r7
000018  4630              MOV      r0,r6
00001a  f7fffffe          BL       _ZN9Formatter5PrintEPKc ; Formatter::Print(const char*)
;;;443        Print(args ...);
00001e  9813              LDR      r0,[sp,#0x4c]
000020  e88d0f00          STM      sp,{r8-r11}
000024  9004              STR      r0,[sp,#0x10]
000026  462a              MOV      r2,r5
000028  4621              MOV      r1,r4
00002a  4630              MOV      r0,r6
00002c  9b0e              LDR      r3,[sp,#0x38]
00002e  f7fffffe          BL       _ZN9Formatter5PrintIPKcJcNS_6DigitsEjA3_cS2_cNS_5AsTxtEEEEvRKT_DpRKT0_ ; void Formatter::Print<const char*, <char, Formatter::Digits, unsigned, char[3], const char*, char, Formatter::AsTxt>>(const T1&, const T2&...)
;;;444      }
000032  b005              ADD      sp,sp,#0x14
000034  e8bd8ff0          POP      {r4-r11,pc}
;;;445    
                          ENDP


                          AREA ||area_number.49||, COMGROUP=_ZN9Formatter5PrintIA5_cJPKccNS_6DigitsEjA3_cS3_cNS_5AsTxtEEEEvRKT_DpRKT0_, LINKORDER=||t._ZN9Formatter5PrintIA5_cJPKccNS_6DigitsEjA3_cS3_cNS_5AsTxtEEEEvRKT_DpRKT0_||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.49||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||t._ZN9Formatter5PrintIA5_cJPKccNS_6DigitsEjA3_cS3_cNS_5AsTxtEEEEvRKT_DpRKT0_||
                          DCD      0x00000001

                          AREA ||i._ZN9FormatterD1Ev||, COMGROUP=_ZN9FormatterD1Ev, CODE, READONLY, ALIGN=1

                  _ZN9FormatterD2Ev                  ; Alternate entry point ; Formatter::~Formatter__sub_object()
                  _ZN9FormatterD1Ev PROC ; Formatter::~Formatter()
000000  4770              BX       lr                    ;1
                          ENDP


                          AREA ||area_number.56||, COMGROUP=_ZN9FormatterD1Ev, LINKORDER=||i._ZN9FormatterD1Ev||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.56||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN9FormatterD1Ev||
                          DCD      0x00000001

                          AREA ||i._ZN9FormatterC1ERNS_5ISinkE||, COMGROUP=_ZN9FormatterC1ERNS_5ISinkE, CODE, READONLY, ALIGN=2

                  _ZN9FormatterC2ERNS_5ISinkE                  ; Alternate entry point ; Formatter::Formatter__sub_object(Formatter::ISink&)
                  _ZN9FormatterC1ERNS_5ISinkE PROC ; Formatter::Formatter(Formatter::ISink&)
;;;91       /// \param[in] put ist die Datensenke zu Aufnahme des Ausgabe-Datenstroms (ASCII-Zeichen, nicht-darstellbare Zeichen werden kodiert).
;;;92       explicit Formatter(ISink & intrf) noexcept : sink(intrf) { }
;;;93     
000000  4a0b              LDR      r2,|L62.48|
000002  6002              STR      r2,[r0,#0]
000004  6041              STR      r1,[r0,#4]
000006  2201              MOVS     r2,#1
000008  6082              STR      r2,[r0,#8]
00000a  60c2              STR      r2,[r0,#0xc]
00000c  2202              MOVS     r2,#2
00000e  7402              STRB     r2,[r0,#0x10]
000010  4a08              LDR      r2,|L62.52|
000012  7813              LDRB     r3,[r2,#0]  ; <Data1>
000014  7443              STRB     r3,[r0,#0x11]
000016  7852              LDRB     r2,[r2,#1]  ; <Data1>
000018  7482              STRB     r2,[r0,#0x12]
00001a  2200              MOVS     r2,#0
00001c  74c2              STRB     r2,[r0,#0x13]
00001e  2201              MOVS     r2,#1
000020  7502              STRB     r2,[r0,#0x14]
000022  2200              MOVS     r2,#0
000024  7542              STRB     r2,[r0,#0x15]
000026  2201              MOVS     r2,#1
000028  7582              STRB     r2,[r0,#0x16]
00002a  2200              MOVS     r2,#0
00002c  8302              STRH     r2,[r0,#0x18]
00002e  4770              BX       lr
                          ENDP

                  |L62.48|
                          DCD      _ZTV9Formatter+0x8 ; vtable for Formatter
                  |L62.52|
                          DCD      ||<Data1>||

                          AREA ||area_number.63||, COMGROUP=_ZN9FormatterC1ERNS_5ISinkE, LINKORDER=||i._ZN9FormatterC1ERNS_5ISinkE||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.63||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN9FormatterC1ERNS_5ISinkE||
                          DCD      0x00000001

                          AREA ||i._ZN10SinkForItmD1Ev||, COMGROUP=_ZN10SinkForItmD1Ev, CODE, READONLY, ALIGN=1

                  _ZN10SinkForItmD2Ev                  ; Alternate entry point ; SinkForItm::~SinkForItm__sub_object()
                  _ZN10SinkForItmD1Ev PROC ; SinkForItm::~SinkForItm()
000000  b510              PUSH     {r4,lr}               ;1
000002  4604              MOV      r4,r0
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       _ZN9Formatter5ISinkD2Ev ; Formatter::ISink::~ISink__sub_object()
00000a  4604              MOV      r4,r0
00000c  bd10              POP      {r4,pc}
                          ENDP


                          AREA ||area_number.70||, COMGROUP=_ZN10SinkForItmD1Ev, LINKORDER=||i._ZN10SinkForItmD1Ev||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.70||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN10SinkForItmD1Ev||
                          DCD      0x00000001

                          AREA ||i._ZN10SinkForItmC1Ev||, COMGROUP=_ZN10SinkForItmC1Ev, CODE, READONLY, ALIGN=2

                  _ZN10SinkForItmC2Ev                  ; Alternate entry point ; SinkForItm::SinkForItm__sub_object()
                  _ZN10SinkForItmC1Ev PROC ; SinkForItm::SinkForItm()
;;;133      
;;;134      constexpr SinkForItm() noexcept { }
;;;135      
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       _ZN9Formatter5ISinkC2Ev ; Formatter::ISink::ISink__sub_object()
00000a  4604              MOV      r4,r0
00000c  4801              LDR      r0,|L76.20|
00000e  6020              STR      r0,[r4,#0]
000010  4620              MOV      r0,r4
000012  bd10              POP      {r4,pc}
                          ENDP

                  |L76.20|
                          DCD      _ZTV10SinkForItm+0x8 ; vtable for SinkForItm

                          AREA ||area_number.77||, COMGROUP=_ZN10SinkForItmC1Ev, LINKORDER=||i._ZN10SinkForItmC1Ev||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.77||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN10SinkForItmC1Ev||
                          DCD      0x00000001

                          AREA ||i._ZN9Formatter5PrintEPKc||, COMGROUP=_ZN9Formatter5PrintEPKc, CODE, READONLY, ALIGN=1

                  _ZN9Formatter5PrintEPKc PROC ; Formatter::Print(const char*)
;;;419      /// \note Der auszugebende String sollte nur darstellbare Zeichen beinhalten.
;;;420      void Print(char const *     const   text  ) noexcept { PrintTxt(text); }
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4629              MOV      r1,r5
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       _ZN9Formatter8PrintTxtEPKc ; Formatter::PrintTxt(const char*)
00000e  bd70              POP      {r4-r6,pc}
;;;421    
                          ENDP


                          AREA ||area_number.84||, COMGROUP=_ZN9Formatter5PrintEPKc, LINKORDER=||i._ZN9Formatter5PrintEPKc||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.84||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN9Formatter5PrintEPKc||
                          DCD      0x00000001

                          AREA ||t._ZN9Formatter5PrintIPKcJcNS_6DigitsEjA3_cS2_cNS_5AsTxtEEEEvRKT_DpRKT0_||, COMGROUP=_ZN9Formatter5PrintIPKcJcNS_6DigitsEjA3_cS2_cNS_5AsTxtEEEEvRKT_DpRKT0_, CODE, READONLY, ALIGN=1

                  _ZN9Formatter5PrintIPKcJcNS_6DigitsEjA3_cS2_cNS_5AsTxtEEEEvRKT_DpRKT0_ PROC ; void Formatter::Print<const char*, <char, Formatter::Digits, unsigned, char[3], const char*, char, Formatter::AsTxt>>(const T1&, const T2&...)
;;;439    
;;;440      template<typename TYPE, typename ... ARGS> void Print(TYPE const & obj, ARGS const & ... args) noexcept
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;441      {
000004  4607              MOV      r7,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
00000a  461e              MOV      r6,r3
00000c  e9ddab11          LDRD     r10,r11,[sp,#0x44]
000010  e9dd890f          LDRD     r8,r9,[sp,#0x3c]
;;;442        Print(obj);
000014  4638              MOV      r0,r7
000016  6821              LDR      r1,[r4,#0]
000018  f7fffffe          BL       _ZN9Formatter5PrintEPKc ; Formatter::Print(const char*)
;;;443        Print(args ...);
00001c  e88d0f00          STM      sp,{r8-r11}
000020  4632              MOV      r2,r6
000022  4629              MOV      r1,r5
000024  4638              MOV      r0,r7
000026  9b0e              LDR      r3,[sp,#0x38]
000028  f7fffffe          BL       _ZN9Formatter5PrintIcJNS_6DigitsEjA3_cPKccNS_5AsTxtEEEEvRKT_DpRKT0_ ; void Formatter::Print<char, <Formatter::Digits, unsigned, char[3], const char*, char, Formatter::AsTxt>>(const T1&, const T2&...)
;;;444      }
00002c  e8bd9fff          POP      {r0-r12,pc}
;;;445    
                          ENDP


                          AREA ||area_number.91||, COMGROUP=_ZN9Formatter5PrintIPKcJcNS_6DigitsEjA3_cS2_cNS_5AsTxtEEEEvRKT_DpRKT0_, LINKORDER=||t._ZN9Formatter5PrintIPKcJcNS_6DigitsEjA3_cS2_cNS_5AsTxtEEEEvRKT_DpRKT0_||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.91||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||t._ZN9Formatter5PrintIPKcJcNS_6DigitsEjA3_cS2_cNS_5AsTxtEEEEvRKT_DpRKT0_||
                          DCD      0x00000001

                          AREA ||i._ZN9Formatter5ISinkD2Ev||, COMGROUP=_ZN9Formatter5ISinkD2Ev, CODE, READONLY, ALIGN=1

                  _ZN9Formatter5ISinkD2Ev PROC ; Formatter::ISink::~ISink__sub_object()
;;;34         
;;;35         virtual ~ISink() = default;
000000  4770              BX       lr
                          ENDP


                          AREA ||area_number.98||, COMGROUP=_ZN9Formatter5ISinkD2Ev, LINKORDER=||i._ZN9Formatter5ISinkD2Ev||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.98||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN9Formatter5ISinkD2Ev||
                          DCD      0x00000001

                          AREA ||i._ZN9Formatter5ISinkC2Ev||, COMGROUP=_ZN9Formatter5ISinkC2Ev, CODE, READONLY, ALIGN=2

                  _ZN9Formatter5ISinkC2Ev PROC ; Formatter::ISink::ISink__sub_object()
;;;27         
;;;28         constexpr ISink() noexcept { }
000000  4901              LDR      r1,|L104.8|
000002  6001              STR      r1,[r0,#0]
000004  4770              BX       lr
;;;29         
                          ENDP

000006  0000              DCW      0x0000
                  |L104.8|
                          DCD      _ZTVN9Formatter5ISinkE+0x8 ; vtable for Formatter::ISink

                          AREA ||area_number.105||, COMGROUP=_ZN9Formatter5ISinkC2Ev, LINKORDER=||i._ZN9Formatter5ISinkC2Ev||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.105||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN9Formatter5ISinkC2Ev||
                          DCD      0x00000001

                          AREA ||i._ZN9Formatter8PrintTxtEPKc||, COMGROUP=_ZN9Formatter8PrintTxtEPKc, CODE, READONLY, ALIGN=1

                  _ZN9Formatter8PrintTxtEPKc PROC ; Formatter::PrintTxt(const char*)
;;;380      /// \param[in] text zeigt auf den darzustellenden Text (Steuerzeichen möglich, werden jedoch sinnvoll dargestellt).
;;;381      void PrintTxt(char const * const text) noexcept { PrintTxt(text, minlen); ResetWidth(); }
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4629              MOV      r1,r5
000008  4620              MOV      r0,r4
00000a  68e2              LDR      r2,[r4,#0xc]
00000c  f7fffffe          BL       _ZN9Formatter8PrintTxtEPKci ; Formatter::PrintTxt(const char*, int)
000010  4620              MOV      r0,r4
000012  f7fffffe          BL       _ZN9Formatter10ResetWidthEv ; Formatter::ResetWidth()
000016  bd70              POP      {r4-r6,pc}
;;;382    
                          ENDP


                          AREA ||area_number.112||, COMGROUP=_ZN9Formatter8PrintTxtEPKc, LINKORDER=||i._ZN9Formatter8PrintTxtEPKc||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.112||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN9Formatter8PrintTxtEPKc||
                          DCD      0x00000001

                          AREA ||t._ZN9Formatter5PrintIcJNS_6DigitsEjA3_cPKccNS_5AsTxtEEEEvRKT_DpRKT0_||, COMGROUP=_ZN9Formatter5PrintIcJNS_6DigitsEjA3_cPKccNS_5AsTxtEEEEvRKT_DpRKT0_, CODE, READONLY, ALIGN=1

                  _ZN9Formatter5PrintIcJNS_6DigitsEjA3_cPKccNS_5AsTxtEEEEvRKT_DpRKT0_ PROC ; void Formatter::Print<char, <Formatter::Digits, unsigned, char[3], const char*, char, Formatter::AsTxt>>(const T1&, const T2&...)
;;;439    
;;;440      template<typename TYPE, typename ... ARGS> void Print(TYPE const & obj, ARGS const & ... args) noexcept
000000  e92d4ffe          PUSH     {r1-r11,lr}
;;;441      {
000004  4607              MOV      r7,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
00000a  461e              MOV      r6,r3
00000c  e9ddab0e          LDRD     r10,r11,[sp,#0x38]
000010  e9dd890c          LDRD     r8,r9,[sp,#0x30]
;;;442        Print(obj);
000014  7821              LDRB     r1,[r4,#0]
000016  4638              MOV      r0,r7
000018  f7fffffe          BL       _ZN9Formatter5PrintEc ; Formatter::Print(char)
;;;443        Print(args ...);
00001c  4643              MOV      r3,r8
00001e  4632              MOV      r2,r6
000020  4629              MOV      r1,r5
000022  4638              MOV      r0,r7
000024  e88d0e00          STM      sp,{r9-r11}
000028  f7fffffe          BL       _ZN9Formatter5PrintINS_6DigitsEJjA3_cPKccNS_5AsTxtEEEEvRKT_DpRKT0_ ; void Formatter::Print<Formatter::Digits, <unsigned, char[3], const char*, char, Formatter::AsTxt>>(const T1&, const T2&...)
;;;444      }
00002c  e8bd8ffe          POP      {r1-r11,pc}
;;;445    
                          ENDP


                          AREA ||area_number.119||, COMGROUP=_ZN9Formatter5PrintIcJNS_6DigitsEjA3_cPKccNS_5AsTxtEEEEvRKT_DpRKT0_, LINKORDER=||t._ZN9Formatter5PrintIcJNS_6DigitsEjA3_cPKccNS_5AsTxtEEEEvRKT_DpRKT0_||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.119||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||t._ZN9Formatter5PrintIcJNS_6DigitsEjA3_cPKccNS_5AsTxtEEEEvRKT_DpRKT0_||
                          DCD      0x00000001

                          AREA ||i._ZN9Formatter10ResetWidthEv||, COMGROUP=_ZN9Formatter10ResetWidthEv, CODE, READONLY, ALIGN=1

                  _ZN9Formatter10ResetWidthEv PROC ; Formatter::ResetWidth()
;;;480      /// Rückstellen der Stellenanzahl und Breite.
;;;481      void ResetWidth() noexcept
000000  2100              MOVS     r1,#0
;;;482      {
;;;483        mindig = 0;
000002  6081              STR      r1,[r0,#8]
;;;484        minlen = 0;
000004  60c1              STR      r1,[r0,#0xc]
;;;485      }
000006  4770              BX       lr
;;;486    
                          ENDP


                          AREA ||area_number.126||, COMGROUP=_ZN9Formatter10ResetWidthEv, LINKORDER=||i._ZN9Formatter10ResetWidthEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.126||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN9Formatter10ResetWidthEv||
                          DCD      0x00000001

                          AREA ||i._ZN9Formatter5PrintEc||, COMGROUP=_ZN9Formatter5PrintEc, CODE, READONLY, ALIGN=1

                  _ZN9Formatter5PrintEc PROC ; Formatter::Print(char)
;;;424      /// \note Das auszugebende Zeichen sollte darstellbar sein.
;;;425      void Print(char             const   value) noexcept { PrintChr(value); }
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4629              MOV      r1,r5
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       _ZN9Formatter8PrintChrEh ; Formatter::PrintChr(unsigned char)
00000e  bd70              POP      {r4-r6,pc}
;;;426    
                          ENDP


                          AREA ||area_number.133||, COMGROUP=_ZN9Formatter5PrintEc, LINKORDER=||i._ZN9Formatter5PrintEc||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.133||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN9Formatter5PrintEc||
                          DCD      0x00000001

                          AREA ||t._ZN9Formatter5PrintINS_6DigitsEJjA3_cPKccNS_5AsTxtEEEEvRKT_DpRKT0_||, COMGROUP=_ZN9Formatter5PrintINS_6DigitsEJjA3_cPKccNS_5AsTxtEEEEvRKT_DpRKT0_, CODE, READONLY, ALIGN=1

                  _ZN9Formatter5PrintINS_6DigitsEJjA3_cPKccNS_5AsTxtEEEEvRKT_DpRKT0_ PROC ; void Formatter::Print<Formatter::Digits, <unsigned, char[3], const char*, char, Formatter::AsTxt>>(const T1&, const T2&...)
;;;439    
;;;440      template<typename TYPE, typename ... ARGS> void Print(TYPE const & obj, ARGS const & ... args) noexcept
000000  e92d47fc          PUSH     {r2-r10,lr}
;;;441      {
000004  4606              MOV      r6,r0
000006  460f              MOV      r7,r1
000008  4614              MOV      r4,r2
00000a  461d              MOV      r5,r3
00000c  e9dd9a0b          LDRD     r9,r10,[sp,#0x2c]
000010  f8dd8028          LDR      r8,[sp,#0x28]
;;;442        Print(obj);
000014  4639              MOV      r1,r7
000016  4630              MOV      r0,r6
000018  f7fffffe          BL       _ZN9Formatter5PrintINS_6DigitsEEEvRKT_ ; void Formatter::Print<Formatter::Digits>(const T1&)
;;;443        Print(args ...);
00001c  4643              MOV      r3,r8
00001e  462a              MOV      r2,r5
000020  4621              MOV      r1,r4
000022  4630              MOV      r0,r6
000024  e9cd9a00          STRD     r9,r10,[sp,#0]
000028  f7fffffe          BL       _ZN9Formatter5PrintIjJA3_cPKccNS_5AsTxtEEEEvRKT_DpRKT0_ ; void Formatter::Print<unsigned, <char[3], const char*, char, Formatter::AsTxt>>(const T1&, const T2&...)
;;;444      }
00002c  e8bd87fc          POP      {r2-r10,pc}
;;;445    
                          ENDP


                          AREA ||area_number.140||, COMGROUP=_ZN9Formatter5PrintINS_6DigitsEJjA3_cPKccNS_5AsTxtEEEEvRKT_DpRKT0_, LINKORDER=||t._ZN9Formatter5PrintINS_6DigitsEJjA3_cPKccNS_5AsTxtEEEEvRKT_DpRKT0_||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.140||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||t._ZN9Formatter5PrintINS_6DigitsEJjA3_cPKccNS_5AsTxtEEEEvRKT_DpRKT0_||
                          DCD      0x00000001

                          AREA ||i._ZN9Formatter8PrintChrEh||, COMGROUP=_ZN9Formatter8PrintChrEh, CODE, READONLY, ALIGN=1

                  _ZN9Formatter8PrintChrEh PROC ; Formatter::PrintChr(unsigned char)
;;;363      /// \param[in] chr ist der ASCII-Code des darzustellenden Zeichens.
;;;364      void PrintChr(BYTE const chr) noexcept { WriteByte(chr); ResetWidth(); }
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4629              MOV      r1,r5
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       _ZN9Formatter9WriteByteEh ; Formatter::WriteByte(unsigned char)
00000e  4620              MOV      r0,r4
000010  f7fffffe          BL       _ZN9Formatter10ResetWidthEv ; Formatter::ResetWidth()
000014  bd70              POP      {r4-r6,pc}
;;;365    
                          ENDP


                          AREA ||area_number.147||, COMGROUP=_ZN9Formatter8PrintChrEh, LINKORDER=||i._ZN9Formatter8PrintChrEh||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.147||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN9Formatter8PrintChrEh||
                          DCD      0x00000001

                          AREA ||t._ZN9Formatter5PrintIjJA3_cPKccNS_5AsTxtEEEEvRKT_DpRKT0_||, COMGROUP=_ZN9Formatter5PrintIjJA3_cPKccNS_5AsTxtEEEEvRKT_DpRKT0_, CODE, READONLY, ALIGN=1

                  _ZN9Formatter5PrintIjJA3_cPKccNS_5AsTxtEEEEvRKT_DpRKT0_ PROC ; void Formatter::Print<unsigned, <char[3], const char*, char, Formatter::AsTxt>>(const T1&, const T2&...)
;;;439    
;;;440      template<typename TYPE, typename ... ARGS> void Print(TYPE const & obj, ARGS const & ... args) noexcept
000000  e92d43f8          PUSH     {r3-r9,lr}
;;;441      {
000004  4607              MOV      r7,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
00000a  461e              MOV      r6,r3
00000c  e9dd8908          LDRD     r8,r9,[sp,#0x20]
;;;442        Print(obj);
000010  4638              MOV      r0,r7
000012  6821              LDR      r1,[r4,#0]
000014  f7fffffe          BL       _ZN9Formatter5PrintEj ; Formatter::Print(unsigned)
;;;443        Print(args ...);
000018  4643              MOV      r3,r8
00001a  4632              MOV      r2,r6
00001c  4629              MOV      r1,r5
00001e  4638              MOV      r0,r7
000020  f8cd9000          STR      r9,[sp,#0]
000024  f7fffffe          BL       _ZN9Formatter5PrintIA3_cJPKccNS_5AsTxtEEEEvRKT_DpRKT0_ ; void Formatter::Print<char[3], <const char*, char, Formatter::AsTxt>>(const T1&, const T2&...)
;;;444      }
000028  e8bd83f8          POP      {r3-r9,pc}
;;;445    
                          ENDP


                          AREA ||area_number.154||, COMGROUP=_ZN9Formatter5PrintIjJA3_cPKccNS_5AsTxtEEEEvRKT_DpRKT0_, LINKORDER=||t._ZN9Formatter5PrintIjJA3_cPKccNS_5AsTxtEEEEvRKT_DpRKT0_||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.154||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||t._ZN9Formatter5PrintIjJA3_cPKccNS_5AsTxtEEEEvRKT_DpRKT0_||
                          DCD      0x00000001

                          AREA ||t._ZN9Formatter5PrintINS_6DigitsEEEvRKT_||, COMGROUP=_ZN9Formatter5PrintINS_6DigitsEEEvRKT_, CODE, READONLY, ALIGN=1

                  _ZN9Formatter5PrintINS_6DigitsEEEvRKT_ PROC ; void Formatter::Print<Formatter::Digits>(const T1&)
;;;437      /// oder (alternativ) \c ToString(IPutNoThrow<BYTE> &) implementieren.
;;;438      template<typename TYPE> void Print(TYPE const & obj) noexcept { PrintObj(*this, obj); }
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4629              MOV      r1,r5
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       _Z8PrintObjIN9Formatter6DigitsEEvRS0_RKT_ ; void PrintObj<Formatter::Digits>(Formatter&, const T1&)
00000e  bd70              POP      {r4-r6,pc}
;;;439    
                          ENDP


                          AREA ||area_number.161||, COMGROUP=_ZN9Formatter5PrintINS_6DigitsEEEvRKT_, LINKORDER=||t._ZN9Formatter5PrintINS_6DigitsEEEvRKT_||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.161||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||t._ZN9Formatter5PrintINS_6DigitsEEEvRKT_||
                          DCD      0x00000001

                          AREA ||t._ZN9Formatter5PrintIA3_cJPKccNS_5AsTxtEEEEvRKT_DpRKT0_||, COMGROUP=_ZN9Formatter5PrintIA3_cJPKccNS_5AsTxtEEEEvRKT_DpRKT0_, CODE, READONLY, ALIGN=1

                  _ZN9Formatter5PrintIA3_cJPKccNS_5AsTxtEEEEvRKT_DpRKT0_ PROC ; void Formatter::Print<char[3], <const char*, char, Formatter::AsTxt>>(const T1&, const T2&...)
;;;439    
;;;440      template<typename TYPE, typename ... ARGS> void Print(TYPE const & obj, ARGS const & ... args) noexcept
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;441      {
000004  4606              MOV      r6,r0
000006  460f              MOV      r7,r1
000008  4614              MOV      r4,r2
00000a  461d              MOV      r5,r3
00000c  f8dd8018          LDR      r8,[sp,#0x18]
;;;442        Print(obj);
000010  4639              MOV      r1,r7
000012  4630              MOV      r0,r6
000014  f7fffffe          BL       _ZN9Formatter5PrintEPKc ; Formatter::Print(const char*)
;;;443        Print(args ...);
000018  4643              MOV      r3,r8
00001a  462a              MOV      r2,r5
00001c  4621              MOV      r1,r4
00001e  4630              MOV      r0,r6
000020  f7fffffe          BL       _ZN9Formatter5PrintIPKcJcNS_5AsTxtEEEEvRKT_DpRKT0_ ; void Formatter::Print<const char*, <char, Formatter::AsTxt>>(const T1&, const T2&...)
;;;444      }
000024  e8bd81f0          POP      {r4-r8,pc}
;;;445    
                          ENDP


                          AREA ||area_number.168||, COMGROUP=_ZN9Formatter5PrintIA3_cJPKccNS_5AsTxtEEEEvRKT_DpRKT0_, LINKORDER=||t._ZN9Formatter5PrintIA3_cJPKccNS_5AsTxtEEEEvRKT_DpRKT0_||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.168||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||t._ZN9Formatter5PrintIA3_cJPKccNS_5AsTxtEEEEvRKT_DpRKT0_||
                          DCD      0x00000001

                          AREA ||i._ZN9Formatter5PrintEj||, COMGROUP=_ZN9Formatter5PrintEj, CODE, READONLY, ALIGN=1

                  _ZN9Formatter5PrintEj PROC ; Formatter::Print(unsigned)
;;;395      /// \copydoc PrintUINT32(UINT32)
;;;396      void Print(UINT32           const   value) noexcept { PrintUINT32(value); }
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4629              MOV      r1,r5
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       _ZN9Formatter11PrintUINT32Ej ; Formatter::PrintUINT32(unsigned)
00000e  bd70              POP      {r4-r6,pc}
;;;397    
                          ENDP


                          AREA ||area_number.175||, COMGROUP=_ZN9Formatter5PrintEj, LINKORDER=||i._ZN9Formatter5PrintEj||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.175||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN9Formatter5PrintEj||
                          DCD      0x00000001

                          AREA ||t._Z8PrintObjIN9Formatter6DigitsEEvRS0_RKT_||, COMGROUP=_Z8PrintObjIN9Formatter6DigitsEEvRS0_RKT_, CODE, READONLY, ALIGN=1

                  _Z8PrintObjIN9Formatter6DigitsEEvRS0_RKT_ PROC ; void PrintObj<Formatter::Digits>(Formatter&, const T1&)
;;;13     
;;;14     template<typename TYPE> inline void PrintObj(Formatter & fmt, TYPE const & obj) noexcept { obj.ToString(fmt); }
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4621              MOV      r1,r4
000008  4628              MOV      r0,r5
00000a  f7fffffe          BL       _ZNK9Formatter6Digits8ToStringERS_ ; Formatter::Digits::ToString(Formatter&) const
00000e  bd70              POP      {r4-r6,pc}
;;;15     
                          ENDP


                          AREA ||area_number.182||, COMGROUP=_Z8PrintObjIN9Formatter6DigitsEEvRS0_RKT_, LINKORDER=||t._Z8PrintObjIN9Formatter6DigitsEEvRS0_RKT_||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.182||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||t._Z8PrintObjIN9Formatter6DigitsEEvRS0_RKT_||
                          DCD      0x00000001

                          AREA ||t._ZN9Formatter5PrintIPKcJcNS_5AsTxtEEEEvRKT_DpRKT0_||, COMGROUP=_ZN9Formatter5PrintIPKcJcNS_5AsTxtEEEEvRKT_DpRKT0_, CODE, READONLY, ALIGN=1

                  _ZN9Formatter5PrintIPKcJcNS_5AsTxtEEEEvRKT_DpRKT0_ PROC ; void Formatter::Print<const char*, <char, Formatter::AsTxt>>(const T1&, const T2&...)
;;;439    
;;;440      template<typename TYPE, typename ... ARGS> void Print(TYPE const & obj, ARGS const & ... args) noexcept
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;441      {
000004  4607              MOV      r7,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
00000a  461e              MOV      r6,r3
;;;442        Print(obj);
00000c  4638              MOV      r0,r7
00000e  6821              LDR      r1,[r4,#0]
000010  f7fffffe          BL       _ZN9Formatter5PrintEPKc ; Formatter::Print(const char*)
;;;443        Print(args ...);
000014  4632              MOV      r2,r6
000016  4629              MOV      r1,r5
000018  4638              MOV      r0,r7
00001a  f7fffffe          BL       _ZN9Formatter5PrintIcJNS_5AsTxtEEEEvRKT_DpRKT0_ ; void Formatter::Print<char, <Formatter::AsTxt>>(const T1&, const T2&...)
;;;444      }
00001e  e8bd81f0          POP      {r4-r8,pc}
;;;445    
                          ENDP


                          AREA ||area_number.189||, COMGROUP=_ZN9Formatter5PrintIPKcJcNS_5AsTxtEEEEvRKT_DpRKT0_, LINKORDER=||t._ZN9Formatter5PrintIPKcJcNS_5AsTxtEEEEvRKT_DpRKT0_||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.189||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||t._ZN9Formatter5PrintIPKcJcNS_5AsTxtEEEEvRKT_DpRKT0_||
                          DCD      0x00000001

                          AREA ||i._ZN9Formatter11PrintUINT32Ej||, COMGROUP=_ZN9Formatter11PrintUINT32Ej, CODE, READONLY, ALIGN=1

                  _ZN9Formatter11PrintUINT32Ej PROC ; Formatter::PrintUINT32(unsigned)
;;;322      /// \param[in] value ist der darzustellende Wert.
;;;323      void PrintUINT32(UINT32 const value) noexcept
000000  b570              PUSH     {r4-r6,lr}
;;;324      {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;325        if ( HexFlag() )
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       _ZNK9Formatter7HexFlagEv ; Formatter::HexFlag() const
00000c  b120              CBZ      r0,|L195.24|
;;;326          PrintUINT32Hex(value);
00000e  4629              MOV      r1,r5
000010  4620              MOV      r0,r4
000012  f7fffffe          BL       _ZN9Formatter14PrintUINT32HexEj ; Formatter::PrintUINT32Hex(unsigned)
000016  e003              B        |L195.32|
                  |L195.24|
;;;327        else
;;;328          PrintUINT32Dec(value);
000018  4629              MOV      r1,r5
00001a  4620              MOV      r0,r4
00001c  f7fffffe          BL       _ZN9Formatter14PrintUINT32DecEj ; Formatter::PrintUINT32Dec(unsigned)
                  |L195.32|
;;;329      }
000020  bd70              POP      {r4-r6,pc}
;;;330    
                          ENDP


                          AREA ||area_number.196||, COMGROUP=_ZN9Formatter11PrintUINT32Ej, LINKORDER=||i._ZN9Formatter11PrintUINT32Ej||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.196||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN9Formatter11PrintUINT32Ej||
                          DCD      0x00000001

                          AREA ||i._ZNK9Formatter6Digits8ToStringERS_||, COMGROUP=_ZNK9Formatter6Digits8ToStringERS_, CODE, READONLY, ALIGN=1

                  _ZNK9Formatter6Digits8ToStringERS_ PROC ; Formatter::Digits::ToString(Formatter&) const
;;;201    
;;;202        void ToString(Formatter & fmt) const noexcept { fmt.SetNumDigits(GetNum()); }
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
000006  4628              MOV      r0,r5
000008  f7fffffe          BL       _ZNK9Formatter6Digits6GetNumEv ; Formatter::Digits::GetNum() const
00000c  4606              MOV      r6,r0
00000e  4631              MOV      r1,r6
000010  4620              MOV      r0,r4
000012  f7fffffe          BL       _ZN9Formatter12SetNumDigitsEi ; Formatter::SetNumDigits(int)
000016  bd70              POP      {r4-r6,pc}
;;;203    
                          ENDP


                          AREA ||area_number.203||, COMGROUP=_ZNK9Formatter6Digits8ToStringERS_, LINKORDER=||i._ZNK9Formatter6Digits8ToStringERS_||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.203||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZNK9Formatter6Digits8ToStringERS_||
                          DCD      0x00000001

                          AREA ||t._ZN9Formatter5PrintIcJNS_5AsTxtEEEEvRKT_DpRKT0_||, COMGROUP=_ZN9Formatter5PrintIcJNS_5AsTxtEEEEvRKT_DpRKT0_, CODE, READONLY, ALIGN=1

                  _ZN9Formatter5PrintIcJNS_5AsTxtEEEEvRKT_DpRKT0_ PROC ; void Formatter::Print<char, <Formatter::AsTxt>>(const T1&, const T2&...)
;;;439    
;;;440      template<typename TYPE, typename ... ARGS> void Print(TYPE const & obj, ARGS const & ... args) noexcept
000000  b570              PUSH     {r4-r6,lr}
;;;441      {
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
000006  4615              MOV      r5,r2
;;;442        Print(obj);
000008  7821              LDRB     r1,[r4,#0]
00000a  4630              MOV      r0,r6
00000c  f7fffffe          BL       _ZN9Formatter5PrintEc ; Formatter::Print(char)
;;;443        Print(args ...);
000010  4629              MOV      r1,r5
000012  4630              MOV      r0,r6
000014  f7fffffe          BL       _ZN9Formatter5PrintINS_5AsTxtEEEvRKT_ ; void Formatter::Print<Formatter::AsTxt>(const T1&)
;;;444      }
000018  bd70              POP      {r4-r6,pc}
;;;445    
                          ENDP


                          AREA ||area_number.210||, COMGROUP=_ZN9Formatter5PrintIcJNS_5AsTxtEEEEvRKT_DpRKT0_, LINKORDER=||t._ZN9Formatter5PrintIcJNS_5AsTxtEEEEvRKT_DpRKT0_||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.210||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||t._ZN9Formatter5PrintIcJNS_5AsTxtEEEEvRKT_DpRKT0_||
                          DCD      0x00000001

                          AREA ||i._ZN9Formatter14PrintUINT32DecEj||, COMGROUP=_ZN9Formatter14PrintUINT32DecEj, CODE, READONLY, ALIGN=1

                  _ZN9Formatter14PrintUINT32DecEj PROC ; Formatter::PrintUINT32Dec(unsigned)
;;;300      /// \param[in] value ist der darzustellende Wert.
;;;301      void PrintUINT32Dec(UINT32 const   value) noexcept { PrintUINT32Dec(value, mindig); }
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4629              MOV      r1,r5
000008  4620              MOV      r0,r4
00000a  68a2              LDR      r2,[r4,#8]
00000c  f7fffffe          BL       _ZN9Formatter14PrintUINT32DecEji ; Formatter::PrintUINT32Dec(unsigned, int)
000010  bd70              POP      {r4-r6,pc}
;;;302    
                          ENDP


                          AREA ||area_number.217||, COMGROUP=_ZN9Formatter14PrintUINT32DecEj, LINKORDER=||i._ZN9Formatter14PrintUINT32DecEj||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.217||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN9Formatter14PrintUINT32DecEj||
                          DCD      0x00000001

                          AREA ||i._ZN9Formatter14PrintUINT32HexEj||, COMGROUP=_ZN9Formatter14PrintUINT32HexEj, CODE, READONLY, ALIGN=1

                  _ZN9Formatter14PrintUINT32HexEj PROC ; Formatter::PrintUINT32Hex(unsigned)
;;;312      /// \param[in] value ist der darzustellende Wert.
;;;313      void PrintUINT32Hex(UINT32 const   value) noexcept { PrintUINT32Hex(value, mindig); }
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4629              MOV      r1,r5
000008  4620              MOV      r0,r4
00000a  68a2              LDR      r2,[r4,#8]
00000c  f7fffffe          BL       _ZN9Formatter14PrintUINT32HexEji ; Formatter::PrintUINT32Hex(unsigned, int)
000010  bd70              POP      {r4-r6,pc}
;;;314    
                          ENDP


                          AREA ||area_number.224||, COMGROUP=_ZN9Formatter14PrintUINT32HexEj, LINKORDER=||i._ZN9Formatter14PrintUINT32HexEj||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.224||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN9Formatter14PrintUINT32HexEj||
                          DCD      0x00000001

                          AREA ||i._ZNK9Formatter7HexFlagEv||, COMGROUP=_ZNK9Formatter7HexFlagEv, CODE, READONLY, ALIGN=1

                  _ZNK9Formatter7HexFlagEv PROC ; Formatter::HexFlag() const
;;;496    
;;;497      bool HexFlag() const noexcept { return radix == RadixMdType::printHex || (radix == RadixMdType::autoMode && prefixed); }
000000  4601              MOV      r1,r0
000002  7c0a              LDRB     r2,[r1,#0x10]
000004  2a01              CMP      r2,#1
000006  d004              BEQ      |L230.18|
000008  7c0a              LDRB     r2,[r1,#0x10]
00000a  2a02              CMP      r2,#2
00000c  d103              BNE      |L230.22|
00000e  7cca              LDRB     r2,[r1,#0x13]
000010  b10a              CBZ      r2,|L230.22|
                  |L230.18|
000012  2201              MOVS     r2,#1
000014  e000              B        |L230.24|
                  |L230.22|
000016  2200              MOVS     r2,#0
                  |L230.24|
000018  4610              MOV      r0,r2
00001a  4770              BX       lr
;;;498    
                          ENDP


                          AREA ||area_number.231||, COMGROUP=_ZNK9Formatter7HexFlagEv, LINKORDER=||i._ZNK9Formatter7HexFlagEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.231||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZNK9Formatter7HexFlagEv||
                          DCD      0x00000001

                          AREA ||i._ZNK9Formatter6Digits6GetNumEv||, COMGROUP=_ZNK9Formatter6Digits6GetNumEv, CODE, READONLY, ALIGN=1

                  _ZNK9Formatter6Digits6GetNumEv PROC ; Formatter::Digits::GetNum() const
;;;199    
;;;200        int GetNum() const noexcept { return num; }
000000  4601              MOV      r1,r0
000002  6808              LDR      r0,[r1,#0]
000004  4770              BX       lr
;;;201    
                          ENDP


                          AREA ||area_number.238||, COMGROUP=_ZNK9Formatter6Digits6GetNumEv, LINKORDER=||i._ZNK9Formatter6Digits6GetNumEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.238||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZNK9Formatter6Digits6GetNumEv||
                          DCD      0x00000001

                          AREA ||i._ZN9Formatter12SetNumDigitsEi||, COMGROUP=_ZN9Formatter12SetNumDigitsEi, CODE, READONLY, ALIGN=1

                  _ZN9Formatter12SetNumDigitsEi PROC ; Formatter::SetNumDigits(int)
;;;469      /// \param[in] digits gibt die Mindestanzahl der Stellen an.
;;;470      void SetNumDigits(int const digits) noexcept { mindig = digits; }
000000  6081              STR      r1,[r0,#8]
000002  4770              BX       lr
;;;471    
                          ENDP


                          AREA ||area_number.245||, COMGROUP=_ZN9Formatter12SetNumDigitsEi, LINKORDER=||i._ZN9Formatter12SetNumDigitsEi||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.245||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN9Formatter12SetNumDigitsEi||
                          DCD      0x00000001

                          AREA ||t._ZN9Formatter5PrintINS_5AsTxtEEEvRKT_||, COMGROUP=_ZN9Formatter5PrintINS_5AsTxtEEEvRKT_, CODE, READONLY, ALIGN=1

                  _ZN9Formatter5PrintINS_5AsTxtEEEvRKT_ PROC ; void Formatter::Print<Formatter::AsTxt>(const T1&)
;;;437      /// oder (alternativ) \c ToString(IPutNoThrow<BYTE> &) implementieren.
;;;438      template<typename TYPE> void Print(TYPE const & obj) noexcept { PrintObj(*this, obj); }
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4629              MOV      r1,r5
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       _Z8PrintObjIN9Formatter5AsTxtEEvRS0_RKT_ ; void PrintObj<Formatter::AsTxt>(Formatter&, const T1&)
00000e  bd70              POP      {r4-r6,pc}
;;;439    
                          ENDP


                          AREA ||area_number.252||, COMGROUP=_ZN9Formatter5PrintINS_5AsTxtEEEvRKT_, LINKORDER=||t._ZN9Formatter5PrintINS_5AsTxtEEEvRKT_||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.252||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||t._ZN9Formatter5PrintINS_5AsTxtEEEvRKT_||
                          DCD      0x00000001

                          AREA ||i._ZN9Formatter14PrintUINT32DecEji||, COMGROUP=_ZN9Formatter14PrintUINT32DecEji, CODE, READONLY, ALIGN=1

                  _ZN9Formatter14PrintUINT32DecEji PROC ; Formatter::PrintUINT32Dec(unsigned, int)
;;;276      /// \param[in] digits gibt die Mindestanzahl der Stellen an, ggf. wird mit Nullen linksseitig aufgefüllt.
;;;277      void PrintUINT32Dec(UINT32 const   value, int const digits) noexcept { PrintUINT32Dec(value, digits, minlen, sign); }
000000  b5f8              PUSH     {r3-r7,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4616              MOV      r6,r2
000008  7d60              LDRB     r0,[r4,#0x15]
00000a  9000              STR      r0,[sp,#0]
00000c  4632              MOV      r2,r6
00000e  4629              MOV      r1,r5
000010  4620              MOV      r0,r4
000012  68e3              LDR      r3,[r4,#0xc]
000014  f7fffffe          BL       _ZN9Formatter14PrintUINT32DecEjiib ; Formatter::PrintUINT32Dec(unsigned, int, int, bool)
000018  bdf8              POP      {r3-r7,pc}
;;;278    
                          ENDP


                          AREA ||area_number.259||, COMGROUP=_ZN9Formatter14PrintUINT32DecEji, LINKORDER=||i._ZN9Formatter14PrintUINT32DecEji||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.259||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN9Formatter14PrintUINT32DecEji||
                          DCD      0x00000001

                          AREA ||i._ZN9Formatter14PrintUINT32HexEji||, COMGROUP=_ZN9Formatter14PrintUINT32HexEji, CODE, READONLY, ALIGN=1

                  _ZN9Formatter14PrintUINT32HexEji PROC ; Formatter::PrintUINT32Hex(unsigned, int)
;;;290      /// \param[in] digits gibt die Mindestanzahl der Stellen an, ggf. wird mit Nullen linksseitig aufgefüllt.
;;;291      void PrintUINT32Hex(UINT32 const   value, int const digits) noexcept { PrintUINT32Hex(value, digits, minlen, mark); }
000000  b5f8              PUSH     {r3-r7,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4616              MOV      r6,r2
000008  7d20              LDRB     r0,[r4,#0x14]
00000a  9000              STR      r0,[sp,#0]
00000c  4632              MOV      r2,r6
00000e  4629              MOV      r1,r5
000010  4620              MOV      r0,r4
000012  68e3              LDR      r3,[r4,#0xc]
000014  f7fffffe          BL       _ZN9Formatter14PrintUINT32HexEjiib ; Formatter::PrintUINT32Hex(unsigned, int, int, bool)
000018  bdf8              POP      {r3-r7,pc}
;;;292    
                          ENDP


                          AREA ||area_number.266||, COMGROUP=_ZN9Formatter14PrintUINT32HexEji, LINKORDER=||i._ZN9Formatter14PrintUINT32HexEji||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.266||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN9Formatter14PrintUINT32HexEji||
                          DCD      0x00000001

                          AREA ||t._Z8PrintObjIN9Formatter5AsTxtEEvRS0_RKT_||, COMGROUP=_Z8PrintObjIN9Formatter5AsTxtEEvRS0_RKT_, CODE, READONLY, ALIGN=1

                  _Z8PrintObjIN9Formatter5AsTxtEEvRS0_RKT_ PROC ; void PrintObj<Formatter::AsTxt>(Formatter&, const T1&)
;;;13     
;;;14     template<typename TYPE> inline void PrintObj(Formatter & fmt, TYPE const & obj) noexcept { obj.ToString(fmt); }
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4621              MOV      r1,r4
000008  4628              MOV      r0,r5
00000a  f7fffffe          BL       _ZNK9Formatter5AsTxt8ToStringERS_ ; Formatter::AsTxt::ToString(Formatter&) const
00000e  bd70              POP      {r4-r6,pc}
;;;15     
                          ENDP


                          AREA ||area_number.273||, COMGROUP=_Z8PrintObjIN9Formatter5AsTxtEEvRS0_RKT_, LINKORDER=||t._Z8PrintObjIN9Formatter5AsTxtEEvRS0_RKT_||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.273||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||t._Z8PrintObjIN9Formatter5AsTxtEEvRS0_RKT_||
                          DCD      0x00000001

                          AREA ||i._ZNK9Formatter5AsTxt8ToStringERS_||, COMGROUP=_ZNK9Formatter5AsTxt8ToStringERS_, CODE, READONLY, ALIGN=2

                  _ZNK9Formatter5AsTxt8ToStringERS_ PROC ; Formatter::AsTxt::ToString(Formatter&) const
;;;166    
;;;167        void ToString(Formatter & fmt) const noexcept
000000  b570              PUSH     {r4-r6,lr}
;;;168        { 
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
;;;169          auto const tmp(GetTxt());
000006  4630              MOV      r0,r6
000008  f7fffffe          BL       _ZNK9Formatter5AsTxt6GetTxtEv ; Formatter::AsTxt::GetTxt() const
00000c  4605              MOV      r5,r0
;;;170          
;;;171          if ( tmp == nullptr )
00000e  b92d              CBNZ     r5,|L279.28|
;;;172            fmt.PrintTxt("nullptr", 1);
000010  2201              MOVS     r2,#1
000012  4905              LDR      r1,|L279.40|
000014  4620              MOV      r0,r4
000016  f7fffffe          BL       _ZN9Formatter8PrintTxtEPKci ; Formatter::PrintTxt(const char*, int)
00001a  e003              B        |L279.36|
                  |L279.28|
;;;173          else
;;;174            fmt.PrintTxtQuoted(tmp); 
00001c  4629              MOV      r1,r5
00001e  4620              MOV      r0,r4
000020  f7fffffe          BL       _ZN9Formatter14PrintTxtQuotedEPKc ; Formatter::PrintTxtQuoted(const char*)
                  |L279.36|
;;;175        }
000024  bd70              POP      {r4-r6,pc}
;;;176    
                          ENDP

000026  0000              DCW      0x0000
                  |L279.40|
                          DCD      _ZZNK9Formatter5AsTxt8ToStringERS_Es ; Formatter::AsTxt::ToString(Formatter&) const::string

                          AREA ||area_number.280||, COMGROUP=_ZNK9Formatter5AsTxt8ToStringERS_, LINKORDER=||i._ZNK9Formatter5AsTxt8ToStringERS_||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.280||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZNK9Formatter5AsTxt8ToStringERS_||
                          DCD      0x00000001

                          AREA ||i._ZNK9Formatter5AsTxt6GetTxtEv||, COMGROUP=_ZNK9Formatter5AsTxt6GetTxtEv, CODE, READONLY, ALIGN=1

                  _ZNK9Formatter5AsTxt6GetTxtEv PROC ; Formatter::AsTxt::GetTxt() const
;;;164    
;;;165        char const * GetTxt() const noexcept { return text; }
000000  4601              MOV      r1,r0
000002  6808              LDR      r0,[r1,#0]
000004  4770              BX       lr
;;;166    
                          ENDP


                          AREA ||area_number.287||, COMGROUP=_ZNK9Formatter5AsTxt6GetTxtEv, LINKORDER=||i._ZNK9Formatter5AsTxt6GetTxtEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.287||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZNK9Formatter5AsTxt6GetTxtEv||
                          DCD      0x00000001

                          AREA ||.constdata__ZTV9Formatter||, COMGROUP=_ZTV9Formatter, DATA, READONLY, ALIGN=2

                  _ZTV9Formatter ; vtable for Formatter
                          DCD      0x00000000
                          DCD      _ZTI9Formatter ; typeinfo for Formatter
                          DCD      _ZN9FormatterD1Ev ; Formatter::~Formatter()
                          DCD      _ZN9FormatterD0Ev ; Formatter::~Formatter__deallocating()

                          AREA ||.constdata__ZTVN9Formatter5ISinkE||, COMGROUP=_ZTVN9Formatter5ISinkE, DATA, READONLY, ALIGN=2

                  _ZTVN9Formatter5ISinkE ; vtable for Formatter::ISink
                          DCD      0x00000000
                          DCD      _ZTIN9Formatter5ISinkE ; typeinfo for Formatter::ISink
                          DCD      _ZN9Formatter5ISinkD2Ev ; Formatter::ISink::~ISink__sub_object()
                          DCD      _ZN9Formatter5ISinkD0Ev ; Formatter::ISink::~ISink__deallocating()
                          DCD      __cxa_pure_virtual

                          AREA ||.constdata__ZTV10SinkForItm||, COMGROUP=_ZTV10SinkForItm, DATA, READONLY, ALIGN=2

                  _ZTV10SinkForItm ; vtable for SinkForItm
                          DCD      0x00000000
                          DCD      _ZTI10SinkForItm ; typeinfo for SinkForItm
                          DCD      _ZN10SinkForItmD1Ev ; SinkForItm::~SinkForItm()
                          DCD      _ZN10SinkForItmD0Ev ; SinkForItm::~SinkForItm__deallocating()
                          DCD      _ZN10SinkForItm9WriteByteEh ; SinkForItm::WriteByte(unsigned char)

                          AREA ||.constdata__ZTI9Formatter||, COMGROUP=_ZTI9Formatter, DATA, READONLY, ALIGN=2

                  _ZTI9Formatter ; typeinfo for Formatter
                          DCD      _ZTVN10__cxxabiv117__class_type_infoE+0x8 ; vtable for __cxxabiv1::__class_type_info
                          DCD      _ZTS9Formatter ; typeinfo name for Formatter

                          AREA ||.constdata__ZTIN9Formatter5ISinkE||, COMGROUP=_ZTIN9Formatter5ISinkE, DATA, READONLY, ALIGN=2

                  _ZTIN9Formatter5ISinkE ; typeinfo for Formatter::ISink
                          DCD      _ZTVN10__cxxabiv117__class_type_infoE+0x8 ; vtable for __cxxabiv1::__class_type_info
                          DCD      _ZTSN9Formatter5ISinkE ; typeinfo name for Formatter::ISink

                          AREA ||.constdata__ZTI10SinkForItm||, COMGROUP=_ZTI10SinkForItm, DATA, READONLY, ALIGN=2

                  _ZTI10SinkForItm ; typeinfo for SinkForItm
                          DCD      _ZTVN10__cxxabiv120__si_class_type_infoE+0x8 ; vtable for __cxxabiv1::__si_class_type_info
                          DCD      _ZTS10SinkForItm ; typeinfo name for SinkForItm
                          DCD      _ZTIN9Formatter5ISinkE ; typeinfo for Formatter::ISink

                          AREA ||.constdata__ZTS9Formatter||, COMGROUP=_ZTS9Formatter, DATA, READONLY, ALIGN=0

                  _ZTS9Formatter ; typeinfo name for Formatter
000000  39466f72          DCB      0x39,0x46,0x6f,0x72
000004  6d617474          DCB      0x6d,0x61,0x74,0x74
000008  657200            DCB      0x65,0x72,0x00

                          AREA ||.constdata__ZTSN9Formatter5ISinkE||, COMGROUP=_ZTSN9Formatter5ISinkE, DATA, READONLY, ALIGN=0

                  _ZTSN9Formatter5ISinkE ; typeinfo name for Formatter::ISink
000000  4e39466f          DCB      0x4e,0x39,0x46,0x6f
000004  726d6174          DCB      0x72,0x6d,0x61,0x74
000008  74657235          DCB      0x74,0x65,0x72,0x35
00000c  4953696e          DCB      0x49,0x53,0x69,0x6e
000010  6b4500            DCB      0x6b,0x45,0x00

                          AREA ||.constdata__ZTS10SinkForItm||, COMGROUP=_ZTS10SinkForItm, DATA, READONLY, ALIGN=0

                  _ZTS10SinkForItm ; typeinfo name for SinkForItm
000000  31305369          DCB      0x31,0x30,0x53,0x69
000004  6e6b466f          DCB      0x6e,0x6b,0x46,0x6f
000008  7249746d          DCB      0x72,0x49,0x74,0x6d
00000c  00                DCB      0x00

                          AREA ||i._ZN9FormatterD0Ev||, COMGROUP=_ZN9FormatterD0Ev, CODE, READONLY, ALIGN=1

                  _ZN9FormatterD0Ev PROC ; Formatter::~Formatter__deallocating()
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       _ZN9FormatterD1Ev ; Formatter::~Formatter()
00000a  4605              MOV      r5,r0
00000c  f7fffffe          BL       _ZdlPv ; operator delete (void*)
000010  bd70              POP      {r4-r6,pc}
                          ENDP


                          AREA ||area_number.315||, COMGROUP=_ZN9FormatterD0Ev, LINKORDER=||i._ZN9FormatterD0Ev||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.315||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN9FormatterD0Ev||
                          DCD      0x00000001

                          AREA ||i._ZN9Formatter5ISinkD0Ev||, COMGROUP=_ZN9Formatter5ISinkD0Ev, CODE, READONLY, ALIGN=1

                  _ZN9Formatter5ISinkD0Ev PROC ; Formatter::ISink::~ISink__deallocating()
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       _ZN9Formatter5ISinkD2Ev ; Formatter::ISink::~ISink__sub_object()
00000a  4605              MOV      r5,r0
00000c  f7fffffe          BL       _ZdlPv ; operator delete (void*)
000010  bd70              POP      {r4-r6,pc}
                          ENDP


                          AREA ||area_number.319||, COMGROUP=_ZN9Formatter5ISinkD0Ev, LINKORDER=||i._ZN9Formatter5ISinkD0Ev||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.319||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN9Formatter5ISinkD0Ev||
                          DCD      0x00000001

                          AREA ||i._ZN10SinkForItmD0Ev||, COMGROUP=_ZN10SinkForItmD0Ev, CODE, READONLY, ALIGN=1

                  _ZN10SinkForItmD0Ev PROC ; SinkForItm::~SinkForItm__deallocating()
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       _ZN10SinkForItmD1Ev ; SinkForItm::~SinkForItm()
00000a  4605              MOV      r5,r0
00000c  f7fffffe          BL       _ZdlPv ; operator delete (void*)
000010  bd70              POP      {r4-r6,pc}
                          ENDP


                          AREA ||area_number.323||, COMGROUP=_ZN10SinkForItmD0Ev, LINKORDER=||i._ZN10SinkForItmD0Ev||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.323||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN10SinkForItmD0Ev||
                          DCD      0x00000001

                          AREA ||i._ZN10SinkForItm9WriteByteEh||, COMGROUP=_ZN10SinkForItm9WriteByteEh, CODE, READONLY, ALIGN=1

                  _ZN10SinkForItm9WriteByteEh PROC ; SinkForItm::WriteByte(unsigned char)
;;;143    
;;;144      virtual void WriteByte(BYTE chr) noexcept
000000  b570              PUSH     {r4-r6,lr}
;;;145      {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;146        if ( TestItmChan0() )
000006  f7fffffe          BL       _Z12TestItmChan0v ; TestItmChan0()
00000a  b110              CBZ      r0,|L326.18|
;;;147          SaveItmChan0(chr);
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       _Z12SaveItmChan0h ; SaveItmChan0(unsigned char)
                  |L326.18|
;;;148      }
000012  bd70              POP      {r4-r6,pc}
;;;149    };
                          ENDP


                          AREA ||area_number.327||, COMGROUP=_ZN10SinkForItm9WriteByteEh, LINKORDER=||i._ZN10SinkForItm9WriteByteEh||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.327||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN10SinkForItm9WriteByteEh||
                          DCD      0x00000001

                          AREA ||i.__ARM_common_noexcept_landing||, COMGROUP=__ARM_common_noexcept_landing, CODE, READONLY, ALIGN=1

                  __ARM_common_noexcept_landing PROC
000000  f7ffbffe          B.W      __cxa_call_terminate
                          ENDP


                          AREA ||area_number.334||, COMGROUP=__ARM_common_noexcept_landing, LINKORDER=||i.__ARM_common_noexcept_landing||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.334||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.__ARM_common_noexcept_landing||
                          DCD      0x00000001
