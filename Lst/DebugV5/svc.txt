; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--cpp11 --list --debug -c --asm --interleave --exceptions --protect_stack -o.\out\debugv5\svc.o --asm_dir=.\Lst\DebugV5\ --list_dir=.\Lst\DebugV5\ --depend=.\out\debugv5\svc.d --cpu=Cortex-M4 --apcs=interwork --no_unaligned_access -O0 --diag_suppress=9931 -I.\Inc -I.\Inc\Debug -I.\Inc\Cortex -I.\Inc\Drivers -I.\Inc\Utilities -D__UVISION_VERSION=527 -DSTM32F429xx -DCORTEX_M=4 -DDEBUG --omf_browse=.\out\debugv5\svc.crf --no_rtti Src\Cortex\SVC.cpp]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  HandleSVC PROC
;;;17     
;;;18     extern "C" void HandleSVC(WORD const * const stack)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;19     {
000004  4604              MOV      r4,r0
;;;20       auto const pc(stack[6]);
000006  69a6              LDR      r6,[r4,#0x18]
;;;21       BYTE const svc(reinterpret_cast<BYTE const *>(pc)[-2]);
000008  f8165c02          LDRB     r5,[r6,#-2]
;;;22     
;;;23       switch(svc)
00000c  2d08              CMP      r5,#8
00000e  d22a              BCS      |L1.102|
000010  e8dff005          TBB      [pc,r5]
000014  04080c14          DCB      0x04,0x08,0x0c,0x14
000018  171f2426          DCB      0x17,0x1f,0x24,0x26
;;;24       {
;;;25         case svcSetCONTROL:                           Cortex::SetCONTROL_privileged(              stack[0] ); break;
00001c  6820              LDR      r0,[r4,#0]
00001e  f7fffffe          BL       _ZN6Cortex21SetCONTROL_privilegedEj ; Cortex::SetCONTROL_privileged(unsigned)
000022  e020              B        |L1.102|
;;;26         case svcSetBASEPRI:                           Cortex::SetBASEPRI_privileged(              stack[0] ); break;
000024  6820              LDR      r0,[r4,#0]
000026  f7fffffe          BL       _ZN6Cortex21SetBASEPRI_privilegedEj ; Cortex::SetBASEPRI_privileged(unsigned)
00002a  e01c              B        |L1.102|
;;;27         case svcGetBASEPRI: *Word2WordPtr(stack[0]) = Cortex::GetBASEPRI_privileged(                       ); break;
00002c  f7fffffe          BL       _ZN6Cortex21GetBASEPRI_privilegedEv ; Cortex::GetBASEPRI_privileged()
000030  4607              MOV      r7,r0
000032  6820              LDR      r0,[r4,#0]
000034  f7fffffe          BL       _ZN28_INTERNAL_7_SVC_cpp_ea1a880c12Word2WordPtrEj ; [local to SVC_cpp]::Word2WordPtr(unsigned)
000038  6007              STR      r7,[r0,#0]
00003a  e014              B        |L1.102|
;;;28         case svcSetPRIMASK:                           Cortex::SetPRIMASK_privileged(                       ); break;
00003c  f7fffffe          BL       _ZN6Cortex21SetPRIMASK_privilegedEv ; Cortex::SetPRIMASK_privileged()
000040  e011              B        |L1.102|
;;;29         case svcGetPRIMASK: *Word2WordPtr(stack[0]) = Cortex::GetPRIMASK_privileged(                       ); break;
000042  f7fffffe          BL       _ZN6Cortex21GetPRIMASK_privilegedEv ; Cortex::GetPRIMASK_privileged()
000046  4607              MOV      r7,r0
000048  6820              LDR      r0,[r4,#0]
00004a  f7fffffe          BL       _ZN28_INTERNAL_7_SVC_cpp_ea1a880c12Word2WordPtrEj ; [local to SVC_cpp]::Word2WordPtr(unsigned)
00004e  6007              STR      r7,[r0,#0]
000050  e009              B        |L1.102|
;;;30         
;;;31         case svcCallIntrf : 
;;;32         reinterpret_cast<ISvcCall *>((void *)stack[0])->Action(); 
000052  6820              LDR      r0,[r4,#0]
000054  6802              LDR      r2,[r0,#0]
000056  6891              LDR      r1,[r2,#8]
000058  4788              BLX      r1
;;;33         break;
00005a  e004              B        |L1.102|
;;;34         
;;;35         case svcCtrlReset :
;;;36         Cortex::Reset_privileged(); 
00005c  f7fffffe          BL       _ZN6Cortex16Reset_privilegedEv ; Cortex::Reset_privileged()
;;;37         break; 
;;;38         
;;;39         case svcPsvTrigger: 
;;;40         PsvTrigger_privileged(); 
000060  f7fffffe          BL       _Z21PsvTrigger_privilegedv ; PsvTrigger_privileged()
;;;41         break;
000064  bf00              NOP      
                  |L1.102|
000066  bf00              NOP                            ;25
;;;42       }
;;;43     }
000068  e8bd81f0          POP      {r4-r8,pc}
;;;44     
                          ENDP

                  _Z10PsvTriggerv PROC ; PsvTrigger()
;;;84     
;;;85     void PsvTrigger() noexcept
00006c  b510              PUSH     {r4,lr}
;;;86     {
;;;87       Cortex::ISB();
00006e  f7fffffe          BL       _ZN6Cortex3ISBEv ; Cortex::ISB()
;;;88     
;;;89       if ( Cortex::IsPrivileged() )
000072  f7fffffe          BL       _ZN6Cortex12IsPrivilegedEv ; Cortex::IsPrivileged()
000076  b110              CBZ      r0,|L1.126|
;;;90         PsvTrigger_privileged(); 
000078  f7fffffe          BL       _Z21PsvTrigger_privilegedv ; PsvTrigger_privileged()
00007c  e000              B        |L1.128|
                  |L1.126|
;;;91       else
;;;92         SVC_PsvTrigger();
00007e  df07              SVC      #0x7
                  |L1.128|
;;;93     }
000080  bd10              POP      {r4,pc}
;;;94     
                          ENDP

                  _ZN6Cortex10SetCONTROLEj PROC ; Cortex::SetCONTROL(unsigned)
;;;44     
;;;45     void Cortex::SetCONTROL(WORD const value) noexcept 
000082  b510              PUSH     {r4,lr}
;;;46     {        
000084  4604              MOV      r4,r0
;;;47       if ( Cortex::IsPrivileged() )
000086  f7fffffe          BL       _ZN6Cortex12IsPrivilegedEv ; Cortex::IsPrivileged()
00008a  b118              CBZ      r0,|L1.148|
;;;48         Cortex::SetCONTROL_privileged(value);
00008c  4620              MOV      r0,r4
00008e  f7fffffe          BL       _ZN6Cortex21SetCONTROL_privilegedEj ; Cortex::SetCONTROL_privileged(unsigned)
000092  e001              B        |L1.152|
                  |L1.148|
;;;49       else
;;;50         SVC_SetCONTROL(value);
000094  4620              MOV      r0,r4
000096  df00              SVC      #0x0
                  |L1.152|
;;;51     }
000098  bd10              POP      {r4,pc}
;;;52     
                          ENDP

                  _ZN6Cortex10SetBASEPRIEj PROC ; Cortex::SetBASEPRI(unsigned)
;;;53     void Cortex::SetBASEPRI(WORD const value) noexcept 
00009a  b510              PUSH     {r4,lr}
;;;54     {        
00009c  4604              MOV      r4,r0
;;;55       if ( Cortex::IsPrivileged() ) 
00009e  f7fffffe          BL       _ZN6Cortex12IsPrivilegedEv ; Cortex::IsPrivileged()
0000a2  b118              CBZ      r0,|L1.172|
;;;56         SetBASEPRI_privileged(value);
0000a4  4620              MOV      r0,r4
0000a6  f7fffffe          BL       _ZN6Cortex21SetBASEPRI_privilegedEj ; Cortex::SetBASEPRI_privileged(unsigned)
0000aa  e001              B        |L1.176|
                  |L1.172|
;;;57       else
;;;58         SVC_SetBASEPRI(value);
0000ac  4620              MOV      r0,r4
0000ae  df01              SVC      #0x1
                  |L1.176|
;;;59     }
0000b0  bd10              POP      {r4,pc}
;;;60     
                          ENDP

                  _ZN6Cortex10GetBASEPRIEv PROC ; Cortex::GetBASEPRI()
;;;61     WORD Cortex::GetBASEPRI() noexcept
0000b2  b510              PUSH     {r4,lr}
;;;62     { 
;;;63       if ( Cortex::IsPrivileged() )
0000b4  f7fffffe          BL       _ZN6Cortex12IsPrivilegedEv ; Cortex::IsPrivileged()
0000b8  b120              CBZ      r0,|L1.196|
;;;64         return GetBASEPRI_privileged();
0000ba  f7fffffe          BL       _ZN6Cortex21GetBASEPRI_privilegedEv ; Cortex::GetBASEPRI_privileged()
0000be  4604              MOV      r4,r0
0000c0  4620              MOV      r0,r4
                  |L1.194|
;;;65       else
;;;66         return SVC_GetBASEPRI(); 
;;;67     }
0000c2  bd10              POP      {r4,pc}
                  |L1.196|
0000c4  f7fffffe          BL       _Z14SVC_GetBASEPRIv ; SVC_GetBASEPRI()
0000c8  4604              MOV      r4,r0                 ;66
0000ca  4620              MOV      r0,r4                 ;66
0000cc  e7f9              B        |L1.194|
;;;68     
                          ENDP

                  _ZN6Cortex10SetPRIMASKEv PROC ; Cortex::SetPRIMASK()
;;;69     void Cortex::SetPRIMASK() noexcept                   
0000ce  b510              PUSH     {r4,lr}
;;;70     {
;;;71       if ( Cortex::IsPrivileged() )
0000d0  f7fffffe          BL       _ZN6Cortex12IsPrivilegedEv ; Cortex::IsPrivileged()
0000d4  b110              CBZ      r0,|L1.220|
;;;72         SetPRIMASK_privileged();
0000d6  f7fffffe          BL       _ZN6Cortex21SetPRIMASK_privilegedEv ; Cortex::SetPRIMASK_privileged()
0000da  e000              B        |L1.222|
                  |L1.220|
;;;73       else
;;;74         SVC_SetPRIMASK();
0000dc  df03              SVC      #0x3
                  |L1.222|
;;;75     }
0000de  bd10              POP      {r4,pc}
;;;76     
                          ENDP

                  _ZN6Cortex10GetPRIMASKEv PROC ; Cortex::GetPRIMASK()
;;;77     WORD Cortex::GetPRIMASK() noexcept
0000e0  b510              PUSH     {r4,lr}
;;;78     { 
;;;79       if ( Cortex::IsPrivileged() )
0000e2  f7fffffe          BL       _ZN6Cortex12IsPrivilegedEv ; Cortex::IsPrivileged()
0000e6  b120              CBZ      r0,|L1.242|
;;;80         return GetPRIMASK_privileged();
0000e8  f7fffffe          BL       _ZN6Cortex21GetPRIMASK_privilegedEv ; Cortex::GetPRIMASK_privileged()
0000ec  4604              MOV      r4,r0
0000ee  4620              MOV      r0,r4
                  |L1.240|
;;;81       else
;;;82         return SVC_GetPRIMASK(); 
;;;83     }
0000f0  bd10              POP      {r4,pc}
                  |L1.242|
0000f2  f7fffffe          BL       _Z14SVC_GetPRIMASKv ; SVC_GetPRIMASK()
0000f6  4604              MOV      r4,r0                 ;82
0000f8  4620              MOV      r0,r4                 ;82
0000fa  e7f9              B        |L1.240|
;;;84     
                          ENDP

                  _ZN6Cortex5ResetEv PROC ; Cortex::Reset()
;;;94     
;;;95     [[noreturn]] void Cortex::Reset() noexcept
0000fc  4805              LDR      r0,|L1.276|
;;;96     { 
;;;97       ITM_PUTS(FUNC);
0000fe  f7fffffe          BL       _Z7ItmPutSPKc ; ItmPutS(const char*)
;;;98     
;;;99       if ( Cortex::IsPrivileged() )
000102  f7fffffe          BL       _ZN6Cortex12IsPrivilegedEv ; Cortex::IsPrivileged()
000106  b108              CBZ      r0,|L1.268|
;;;100        Cortex::Reset_privileged(); 
000108  f7fffffe          BL       _ZN6Cortex16Reset_privilegedEv ; Cortex::Reset_privileged()
                  |L1.268|
;;;101      else
;;;102        SVC_CtrlReset();
00010c  df06              SVC      #0x6
;;;103    }
                          ENDP

                  _ZN28_INTERNAL_7_SVC_cpp_ea1a880c12Word2WordPtrEj PROC ; [local to SVC_cpp]::Word2WordPtr(unsigned)
;;;15     
;;;16     static inline WORD * Word2WordPtr(WORD const data) noexcept { return reinterpret_cast<WORD *>(data); }
00010e  4601              MOV      r1,r0
000110  4608              MOV      r0,r1
000112  4770              BX       lr
;;;17     
                          ENDP

                  |L1.276|
                          DCD      _ZZN6Cortex5ResetEvE19__PRETTY_FUNCTION__ ; Cortex::Reset()::__PRETTY_FUNCTION__

                          AREA ||.ARM.exidx||, LINKORDER=||.text||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          REQUIRE __aeabi_unwind_cpp_pr0
                          DCD      0x00000000
                          RELOC 42, ||.text||
                          DCD      0x80acb0b0

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  _ZZN6Cortex5ResetEvE19__PRETTY_FUNCTION__ ; Cortex::Reset()::__PRETTY_FUNCTION__
000000  766f6964          DCB      0x76,0x6f,0x69,0x64
000004  20436f72          DCB      0x20,0x43,0x6f,0x72
000008  7465783a          DCB      0x74,0x65,0x78,0x3a
00000c  3a526573          DCB      0x3a,0x52,0x65,0x73
000010  65742829          DCB      0x65,0x74,0x28,0x29
000014  00                DCB      0x00

                          AREA ||i._Z14SVC_GetBASEPRIv||, COMGROUP=_Z14SVC_GetBASEPRIv, CODE, READONLY, ALIGN=1

                  _Z14SVC_GetBASEPRIv PROC ; SVC_GetBASEPRI()
;;;97     
;;;98     inline WORD SVC_GetBASEPRI()           noexcept { WORD value; SVC_GetBASEPRI(&value); return value;  }
000000  b538              PUSH     {r3-r5,lr}
000002  4668              MOV      r0,sp
000004  df02              SVC      #0x2
000006  9c00              LDR      r4,[sp,#0]
000008  4620              MOV      r0,r4
00000a  bd38              POP      {r3-r5,pc}
;;;99     inline WORD SVC_GetPRIMASK()           noexcept { WORD value; SVC_GetPRIMASK(&value); return value;  }
                          ENDP


                          AREA ||area_number.17||, COMGROUP=_Z14SVC_GetBASEPRIv, LINKORDER=||i._Z14SVC_GetBASEPRIv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.17||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._Z14SVC_GetBASEPRIv||
                          DCD      0x00000001

                          AREA ||i._Z14SVC_GetPRIMASKv||, COMGROUP=_Z14SVC_GetPRIMASKv, CODE, READONLY, ALIGN=1

                  _Z14SVC_GetPRIMASKv PROC ; SVC_GetPRIMASK()
;;;98     inline WORD SVC_GetBASEPRI()           noexcept { WORD value; SVC_GetBASEPRI(&value); return value;  }
;;;99     inline WORD SVC_GetPRIMASK()           noexcept { WORD value; SVC_GetPRIMASK(&value); return value;  }
000000  b538              PUSH     {r3-r5,lr}
000002  4668              MOV      r0,sp
000004  df04              SVC      #0x4
000006  9c00              LDR      r4,[sp,#0]
000008  4620              MOV      r0,r4
00000a  bd38              POP      {r3-r5,pc}
;;;100    
                          ENDP


                          AREA ||area_number.24||, COMGROUP=_Z14SVC_GetPRIMASKv, LINKORDER=||i._Z14SVC_GetPRIMASKv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.24||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._Z14SVC_GetPRIMASKv||
                          DCD      0x00000001

                          AREA ||i._ZN6Cortex21GetBASEPRI_privilegedEv||, COMGROUP=_ZN6Cortex21GetBASEPRI_privilegedEv, CODE, READONLY, ALIGN=1

                  _ZN6Cortex21GetBASEPRI_privilegedEv PROC ; Cortex::GetBASEPRI_privileged()
;;;165      /// \note Der Prozessor muss sich im privilegierten Modus befinden. Es findet keine Prüfung statt, ob diese Voraussetzung zutrifft.
;;;166      FORCE_INLINE WORD GetBASEPRI_privileged() noexcept { return ARM_RSR(basepri); }
000000  b510              PUSH     {r4,lr}
000002  f7fffffe          BL       _Z15ARM_RSR_basepriv ; ARM_RSR_basepri()
000006  4604              MOV      r4,r0
000008  4620              MOV      r0,r4
00000a  bd10              POP      {r4,pc}
;;;167    
                          ENDP


                          AREA ||area_number.31||, COMGROUP=_ZN6Cortex21GetBASEPRI_privilegedEv, LINKORDER=||i._ZN6Cortex21GetBASEPRI_privilegedEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.31||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN6Cortex21GetBASEPRI_privilegedEv||
                          DCD      0x00000001

                          AREA ||i._ZN6Cortex21SetBASEPRI_privilegedEj||, COMGROUP=_ZN6Cortex21SetBASEPRI_privilegedEj, CODE, READONLY, ALIGN=1

                  _ZN6Cortex21SetBASEPRI_privilegedEj PROC ; Cortex::SetBASEPRI_privileged(unsigned)
;;;174    
;;;175      FORCE_INLINE void SetBASEPRI_privileged(WORD const value) noexcept { ARM_WSR(basepri, value); }
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       _Z15ARM_WSR_baseprij ; ARM_WSR_basepri(unsigned)
00000a  bd10              POP      {r4,pc}
;;;176    
                          ENDP


                          AREA ||area_number.38||, COMGROUP=_ZN6Cortex21SetBASEPRI_privilegedEj, LINKORDER=||i._ZN6Cortex21SetBASEPRI_privilegedEj||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.38||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN6Cortex21SetBASEPRI_privilegedEj||
                          DCD      0x00000001

                          AREA ||i._ZN6Cortex21SetCONTROL_privilegedEj||, COMGROUP=_ZN6Cortex21SetCONTROL_privilegedEj, CODE, READONLY, ALIGN=1

                  _ZN6Cortex21SetCONTROL_privilegedEj PROC ; Cortex::SetCONTROL_privileged(unsigned)
;;;158      /// \note Der Prozessor muss sich im privilegierten Modus befinden. Es findet keine Prüfung statt, ob diese Voraussetzung zutrifft.
;;;159      FORCE_INLINE void SetCONTROL_privileged(WORD const value) noexcept { ARM_WSR(control, value); }
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       _Z15ARM_WSR_controlj ; ARM_WSR_control(unsigned)
00000a  bd10              POP      {r4,pc}
;;;160    
                          ENDP


                          AREA ||area_number.45||, COMGROUP=_ZN6Cortex21SetCONTROL_privilegedEj, LINKORDER=||i._ZN6Cortex21SetCONTROL_privilegedEj||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.45||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN6Cortex21SetCONTROL_privilegedEj||
                          DCD      0x00000001

                          AREA ||i._ZN6Cortex12IsPrivilegedEv||, COMGROUP=_ZN6Cortex12IsPrivilegedEv, CODE, READONLY, ALIGN=1

                  _ZN6Cortex12IsPrivilegedEv PROC ; Cortex::IsPrivileged()
;;;288      /// \note Exception mode ist immer privilegiert, unabhängig von CONTROL[0]!
;;;289      FORCE_INLINE bool IsPrivileged() noexcept { return (GetCONTROL() & CONTROL_usermode) == 0U || ! IsThreadMode(); }
000000  b510              PUSH     {r4,lr}
000002  f7fffffe          BL       _ZN6Cortex10GetCONTROLEv ; Cortex::GetCONTROL()
000006  f0000001          AND      r0,r0,#1
00000a  b110              CBZ      r0,|L51.18|
00000c  f7fffffe          BL       _ZN6Cortex12IsThreadModeEv ; Cortex::IsThreadMode()
000010  b908              CBNZ     r0,|L51.22|
                  |L51.18|
000012  2001              MOVS     r0,#1
000014  e000              B        |L51.24|
                  |L51.22|
000016  2000              MOVS     r0,#0
                  |L51.24|
000018  4604              MOV      r4,r0
00001a  4620              MOV      r0,r4
00001c  bd10              POP      {r4,pc}
;;;290      
                          ENDP


                          AREA ||area_number.52||, COMGROUP=_ZN6Cortex12IsPrivilegedEv, LINKORDER=||i._ZN6Cortex12IsPrivilegedEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.52||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN6Cortex12IsPrivilegedEv||
                          DCD      0x00000001

                          AREA ||i._ZN6Cortex3ISBEv||, COMGROUP=_ZN6Cortex3ISBEv, CODE, READONLY, ALIGN=1

                  _ZN6Cortex3ISBEv PROC ; Cortex::ISB()
;;;123      FORCE_INLINE void DSB() noexcept { SCHEDULE_BARRIER(); __dsb(0xF); SCHEDULE_BARRIER(); }
;;;124      FORCE_INLINE void ISB() noexcept { SCHEDULE_BARRIER(); __isb(0xF); SCHEDULE_BARRIER(); }
000000  bf00              NOP      
000002  bf00              NOP      
000004  f3bf8f6f          ISB      
000008  bf00              NOP      
00000a  bf00              NOP      
00000c  4770              BX       lr
;;;125    
                          ENDP


                          AREA ||area_number.59||, COMGROUP=_ZN6Cortex3ISBEv, LINKORDER=||i._ZN6Cortex3ISBEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.59||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN6Cortex3ISBEv||
                          DCD      0x00000001

                          AREA ||i._Z15ARM_WSR_controlj||, COMGROUP=_Z15ARM_WSR_controlj, CODE, READONLY, ALIGN=1

                  _Z15ARM_WSR_controlj PROC ; ARM_WSR_control(unsigned)
;;;39     DEFINE_ARM_RSR(control)
;;;40     DEFINE_ARM_WSR(control)
000000  f3808814          MSR      CONTROL,r0
000004  4770              BX       lr
;;;41     DEFINE_ARM_RSR(basepri)
                          ENDP


                          AREA ||area_number.66||, COMGROUP=_Z15ARM_WSR_controlj, LINKORDER=||i._Z15ARM_WSR_controlj||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.66||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._Z15ARM_WSR_controlj||
                          DCD      0x00000001

                          AREA ||i._Z15ARM_RSR_basepriv||, COMGROUP=_Z15ARM_RSR_basepriv, CODE, READONLY, ALIGN=1

                  _Z15ARM_RSR_basepriv PROC ; ARM_RSR_basepri()
;;;40     DEFINE_ARM_WSR(control)
;;;41     DEFINE_ARM_RSR(basepri)
000000  f3ef8111          MRS      r1,BASEPRI
000004  4608              MOV      r0,r1
000006  4770              BX       lr
;;;42     DEFINE_ARM_WSR(basepri)
                          ENDP


                          AREA ||area_number.73||, COMGROUP=_Z15ARM_RSR_basepriv, LINKORDER=||i._Z15ARM_RSR_basepriv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.73||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._Z15ARM_RSR_basepriv||
                          DCD      0x00000001

                          AREA ||i._Z15ARM_WSR_baseprij||, COMGROUP=_Z15ARM_WSR_baseprij, CODE, READONLY, ALIGN=1

                  _Z15ARM_WSR_baseprij PROC ; ARM_WSR_basepri(unsigned)
;;;41     DEFINE_ARM_RSR(basepri)
;;;42     DEFINE_ARM_WSR(basepri)
000000  f3808811          MSR      BASEPRI,r0
000004  4770              BX       lr
;;;43     DEFINE_ARM_RSR(primask)
                          ENDP


                          AREA ||area_number.80||, COMGROUP=_Z15ARM_WSR_baseprij, LINKORDER=||i._Z15ARM_WSR_baseprij||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.80||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._Z15ARM_WSR_baseprij||
                          DCD      0x00000001

                          AREA ||i._ZN6Cortex12IsThreadModeEv||, COMGROUP=_ZN6Cortex12IsThreadModeEv, CODE, READONLY, ALIGN=1

                  _ZN6Cortex12IsThreadModeEv PROC ; Cortex::IsThreadMode()
;;;283      /// \note Die Bestimmung, ob sich der Prozessor im Thread-Modus befindet, erfolgt anhand der aktuellen ISR-Nummer.
;;;284      FORCE_INLINE bool IsThreadMode() noexcept { return GetCurrentIsrNum() == isrNum_THREAD_MODE; }
000000  b510              PUSH     {r4,lr}
000002  f7fffffe          BL       _ZN6Cortex16GetCurrentIsrNumEv ; Cortex::GetCurrentIsrNum()
000006  b908              CBNZ     r0,|L86.12|
000008  2001              MOVS     r0,#1
00000a  e000              B        |L86.14|
                  |L86.12|
00000c  2000              MOVS     r0,#0
                  |L86.14|
00000e  4604              MOV      r4,r0
000010  4620              MOV      r0,r4
000012  bd10              POP      {r4,pc}
;;;285    
                          ENDP


                          AREA ||area_number.87||, COMGROUP=_ZN6Cortex12IsThreadModeEv, LINKORDER=||i._ZN6Cortex12IsThreadModeEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.87||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN6Cortex12IsThreadModeEv||
                          DCD      0x00000001

                          AREA ||i._ZN6Cortex10GetCONTROLEv||, COMGROUP=_ZN6Cortex10GetCONTROLEv, CODE, READONLY, ALIGN=1

                  _ZN6Cortex10GetCONTROLEv PROC ; Cortex::GetCONTROL()
;;;153      /// \return Wert des CONTROL-Registers
;;;154      FORCE_INLINE WORD GetCONTROL() noexcept { return ARM_RSR(control); }
000000  b510              PUSH     {r4,lr}
000002  f7fffffe          BL       _Z15ARM_RSR_controlv ; ARM_RSR_control()
000006  4604              MOV      r4,r0
000008  4620              MOV      r0,r4
00000a  bd10              POP      {r4,pc}
;;;155    
                          ENDP


                          AREA ||area_number.94||, COMGROUP=_ZN6Cortex10GetCONTROLEv, LINKORDER=||i._ZN6Cortex10GetCONTROLEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.94||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN6Cortex10GetCONTROLEv||
                          DCD      0x00000001

                          AREA ||i._Z15ARM_RSR_controlv||, COMGROUP=_Z15ARM_RSR_controlv, CODE, READONLY, ALIGN=1

                  _Z15ARM_RSR_controlv PROC ; ARM_RSR_control()
;;;38     
;;;39     DEFINE_ARM_RSR(control)
000000  f3ef8114          MRS      r1,CONTROL
000004  4608              MOV      r0,r1
000006  4770              BX       lr
;;;40     DEFINE_ARM_WSR(control)
                          ENDP


                          AREA ||area_number.101||, COMGROUP=_Z15ARM_RSR_controlv, LINKORDER=||i._Z15ARM_RSR_controlv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.101||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._Z15ARM_RSR_controlv||
                          DCD      0x00000001

                          AREA ||i._ZN6Cortex16GetCurrentIsrNumEv||, COMGROUP=_ZN6Cortex16GetCurrentIsrNumEv, CODE, READONLY, ALIGN=1

                  _ZN6Cortex16GetCurrentIsrNumEv PROC ; Cortex::GetCurrentIsrNum()
;;;278      /// \return Nummer der aktiven Exception.
;;;279      FORCE_INLINE WORD GetCurrentIsrNum() noexcept { return GetIPSR(); }
000000  b510              PUSH     {r4,lr}
000002  f7fffffe          BL       _ZN6Cortex7GetIPSREv ; Cortex::GetIPSR()
000006  4604              MOV      r4,r0
000008  4620              MOV      r0,r4
00000a  bd10              POP      {r4,pc}
;;;280    
                          ENDP


                          AREA ||area_number.108||, COMGROUP=_ZN6Cortex16GetCurrentIsrNumEv, LINKORDER=||i._ZN6Cortex16GetCurrentIsrNumEv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.108||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN6Cortex16GetCurrentIsrNumEv||
                          DCD      0x00000001

                          AREA ||i._ZN6Cortex7GetIPSREv||, COMGROUP=_ZN6Cortex7GetIPSREv, CODE, READONLY, ALIGN=1

                  _ZN6Cortex7GetIPSREv PROC ; Cortex::GetIPSR()
;;;220    
;;;221      FORCE_INLINE WORD GetIPSR() noexcept { return ARM_RSR(ipsr); }
000000  b510              PUSH     {r4,lr}
000002  f7fffffe          BL       _Z12ARM_RSR_ipsrv ; ARM_RSR_ipsr()
000006  4604              MOV      r4,r0
000008  4620              MOV      r0,r4
00000a  bd10              POP      {r4,pc}
;;;222      FORCE_INLINE WORD GetAPSR() noexcept { return ARM_RSR(apsr); }
                          ENDP


                          AREA ||area_number.115||, COMGROUP=_ZN6Cortex7GetIPSREv, LINKORDER=||i._ZN6Cortex7GetIPSREv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.115||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._ZN6Cortex7GetIPSREv||
                          DCD      0x00000001

                          AREA ||i._Z12ARM_RSR_ipsrv||, COMGROUP=_Z12ARM_RSR_ipsrv, CODE, READONLY, ALIGN=1

                  _Z12ARM_RSR_ipsrv PROC ; ARM_RSR_ipsr()
;;;54     DEFINE_ARM_RSR(apsr)
;;;55     DEFINE_ARM_RSR(ipsr)
000000  f3ef8105          MRS      r1,IPSR
000004  4608              MOV      r0,r1
000006  4770              BX       lr
;;;56     
                          ENDP


                          AREA ||area_number.122||, COMGROUP=_Z12ARM_RSR_ipsrv, LINKORDER=||i._Z12ARM_RSR_ipsrv||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.122||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i._Z12ARM_RSR_ipsrv||
                          DCD      0x00000001

                          AREA ||i.__ARM_common_noexcept_landing||, COMGROUP=__ARM_common_noexcept_landing, CODE, READONLY, ALIGN=1

                  __ARM_common_noexcept_landing PROC
000000  f7ffbffe          B.W      __cxa_call_terminate
                          ENDP


                          AREA ||area_number.129||, COMGROUP=__ARM_common_noexcept_landing, LINKORDER=||i.__ARM_common_noexcept_landing||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          EXPORTAS ||area_number.129||, ||.ARM.exidx||
                          DCD      0x00000000
                          RELOC 42, ||i.__ARM_common_noexcept_landing||
                          DCD      0x00000001
