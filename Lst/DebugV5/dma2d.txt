; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--cpp11 --list --debug -c --asm --interleave --exceptions --protect_stack -o.\out\debugv5\dma2d.o --asm_dir=.\Lst\DebugV5\ --list_dir=.\Lst\DebugV5\ --depend=.\out\debugv5\dma2d.d --cpu=Cortex-M4 --apcs=interwork --no_unaligned_access -O0 --diag_suppress=9931 -I.\Inc -I.\Inc\Debug -I.\Inc\Cortex -I.\Inc\Drivers -I.\Inc\Utilities -D__UVISION_VERSION=527 -DSTM32F429xx -DCORTEX_M=4 -DDEBUG --omf_browse=.\out\debugv5\dma2d.crf --no_rtti Src\Dma2d.cpp]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _ZN5Dma2dC2Ev                  ; Alternate entry point ; Dma2d::Dma2d__sub_object()
                  _ZN5Dma2dC1Ev PROC ; Dma2d::Dma2d()
;;;2      
;;;3      Dma2d::Dma2d(){}
;;;4      		
000000  4770              BX       lr
                          ENDP

                  _ZN5Dma2d10waitToInitEv PROC ; Dma2d::waitToInit()
;;;34     
;;;35     void Dma2d::waitToInit(){
000002  bf00              NOP      
;;;36     	DMA2D_WAIT;
000004  bf00              NOP      
                  |L1.6|
000006  4941              LDR      r1,|L1.268|
000008  6809              LDR      r1,[r1,#0]  ; rbDMA_2D
00000a  f0010101          AND      r1,r1,#1
00000e  2900              CMP      r1,#0
000010  d1f9              BNE      |L1.6|
000012  2102              MOVS     r1,#2
000014  4a3d              LDR      r2,|L1.268|
000016  6091              STR      r1,[r2,#8]  ; rbDMA_2D
000018  bf00              NOP      
;;;37     	
;;;38     	rbRCC.AHB1RSTR |= MASK_RCC_AHB1_DMA1;
00001a  493d              LDR      r1,|L1.272|
00001c  6909              LDR      r1,[r1,#0x10]  ; rbRCC
00001e  f4411100          ORR      r1,r1,#0x200000
000022  4a3b              LDR      r2,|L1.272|
000024  6111              STR      r1,[r2,#0x10]  ; rbRCC
;;;39     	rbRCC.AHB1RSTR &= ~MASK_RCC_AHB1_DMA1;
000026  4611              MOV      r1,r2
000028  6909              LDR      r1,[r1,#0x10]  ; rbRCC
00002a  f4211100          BIC      r1,r1,#0x200000
00002e  6111              STR      r1,[r2,#0x10]  ; rbRCC
;;;40     	
;;;41     	rbDMA_2D.CR |= (WORD)INDX_DMA2D_CR_START;
000030  4936              LDR      r1,|L1.268|
000032  6809              LDR      r1,[r1,#0]  ; rbDMA_2D
000034  4a35              LDR      r2,|L1.268|
000036  6011              STR      r1,[r2,#0]  ; rbDMA_2D
;;;42     	
;;;43     	DMA2D_WAIT;
000038  bf00              NOP      
00003a  bf00              NOP      
                  |L1.60|
00003c  4933              LDR      r1,|L1.268|
00003e  6809              LDR      r1,[r1,#0]  ; rbDMA_2D
000040  f0010101          AND      r1,r1,#1
000044  2900              CMP      r1,#0
000046  d1f9              BNE      |L1.60|
000048  2102              MOVS     r1,#2
00004a  4a30              LDR      r2,|L1.268|
00004c  6091              STR      r1,[r2,#8]  ; rbDMA_2D
00004e  bf00              NOP      
;;;44     }
000050  4770              BX       lr
                          ENDP

                  _ZN5Dma2d9SetMemoryEjjjt PROC ; Dma2d::SetMemory(unsigned, unsigned, unsigned, unsigned short)
;;;16     		
;;;17     void Dma2d::SetMemory(uint32_t memoryAddr, uint32_t offset, uint32_t width, uint16_t height){
000052  b570              PUSH     {r4-r6,lr}
000054  9c04              LDR      r4,[sp,#0x10]
;;;18     	rbDMA_2D.OMAR = memoryAddr;
000056  4d2d              LDR      r5,|L1.268|
000058  63e9              STR      r1,[r5,#0x3c]  ; rbDMA_2D
;;;19     	rbDMA_2D.OOR = offset;
00005a  642a              STR      r2,[r5,#0x40]  ; rbDMA_2D
;;;20     	rbDMA_2D.NLR = ((width) << 16) | (height);
00005c  ea444503          ORR      r5,r4,r3,LSL #16
000060  4e2a              LDR      r6,|L1.268|
000062  6475              STR      r5,[r6,#0x44]  ; rbDMA_2D
;;;21     }
000064  bd70              POP      {r4-r6,pc}
;;;22     
                          ENDP

                  _ZN5Dma2d13drawRectangleEttttjjj PROC ; Dma2d::drawRectangle(unsigned short, unsigned short, unsigned short, unsigned short, unsigned, unsigned, unsigned)
;;;4      		
;;;5      void Dma2d::drawRectangle(uint16_t x, uint16_t y, uint16_t width, uint16_t height, uint32_t color, uint32_t memory, uint32_t displayWidth){
000066  e92d4ff8          PUSH     {r3-r11,lr}
00006a  4680              MOV      r8,r0
00006c  460c              MOV      r4,r1
00006e  4615              MOV      r5,r2
000070  461e              MOV      r6,r3
000072  e9ddab0b          LDRD     r10,r11,[sp,#0x2c]
000076  f8dd9028          LDR      r9,[sp,#0x28]
00007a  9f0d              LDR      r7,[sp,#0x34]
;;;6      	rbDMA_2D.CR |= MASK_DMA2D_CR_MODE_REG2MEM;
00007c  4823              LDR      r0,|L1.268|
00007e  6800              LDR      r0,[r0,#0]  ; rbDMA_2D
000080  f4403040          ORR      r0,r0,#0x30000
000084  4921              LDR      r1,|L1.268|
000086  6008              STR      r0,[r1,#0]  ; rbDMA_2D
;;;7      	rbDMA_2D.OCOLR = color;
000088  4608              MOV      r0,r1
00008a  f8c0a038          STR      r10,[r0,#0x38]  ; rbDMA_2D
;;;8      	
;;;9      	Dma2d::SetMemory(memory + ((x + y * displayWidth)*4),displayWidth - width, width, height);
00008e  1bba              SUBS     r2,r7,r6
000090  fb054007          MLA      r0,r5,r7,r4
000094  eb0b0180          ADD      r1,r11,r0,LSL #2
000098  4633              MOV      r3,r6
00009a  4640              MOV      r0,r8
00009c  f8cd9000          STR      r9,[sp,#0]
0000a0  f7fffffe          BL       _ZN5Dma2d9SetMemoryEjjjt ; Dma2d::SetMemory(unsigned, unsigned, unsigned, unsigned short)
;;;10     	
;;;11     	rbDMA_2D.CR |= MASK_DMA2D_CR_START;
0000a4  4819              LDR      r0,|L1.268|
0000a6  6800              LDR      r0,[r0,#0]  ; rbDMA_2D
0000a8  f0400001          ORR      r0,r0,#1
0000ac  4917              LDR      r1,|L1.268|
0000ae  6008              STR      r0,[r1,#0]  ; rbDMA_2D
;;;12     	
;;;13     	Dma2d::waitToInit();
0000b0  4640              MOV      r0,r8
0000b2  f7fffffe          BL       _ZN5Dma2d10waitToInitEv ; Dma2d::waitToInit()
;;;14     }
0000b6  e8bd8ff8          POP      {r3-r11,pc}
;;;15     
                          ENDP

                  _ZN5Dma2d10drawCircleEjjjj PROC ; Dma2d::drawCircle(unsigned, unsigned, unsigned, unsigned)
;;;22     
;;;23     void Dma2d::drawCircle( uint32_t radius, uint32_t color, uint32_t memory, uint32_t layerWidth)
0000ba  e92d47ff          PUSH     {r0-r10,lr}
;;;24     {	
0000be  4681              MOV      r9,r0
0000c0  460c              MOV      r4,r1
0000c2  4617              MOV      r7,r2
0000c4  4698              MOV      r8,r3
0000c6  f8dda030          LDR      r10,[sp,#0x30]
;;;25     	for(uint32_t i = 0; i < (radius * 2); i++)
0000ca  2600              MOVS     r6,#0
0000cc  e019              B        |L1.258|
                  |L1.206|
;;;26     		for(uint32_t j = 0; j< (radius * 2); j++)
0000ce  2500              MOVS     r5,#0
0000d0  e013              B        |L1.250|
                  |L1.210|
;;;27     		{
;;;28     			if(((i - radius) * (i - radius) + (j - radius) * (j - radius)) <= radius * radius)
0000d2  1b30              SUBS     r0,r6,r4
0000d4  4340              MULS     r0,r0,r0
0000d6  1b29              SUBS     r1,r5,r4
0000d8  1b2a              SUBS     r2,r5,r4
0000da  fb010102          MLA      r1,r1,r2,r0
0000de  fb04f004          MUL      r0,r4,r4
0000e2  4281              CMP      r1,r0
0000e4  d808              BHI      |L1.248|
;;;29     			{
;;;30     				drawRectangle(j, i, 1, 1, color, memory, layerWidth);
0000e6  2001              MOVS     r0,#1
0000e8  b2b2              UXTH     r2,r6
0000ea  b2a9              UXTH     r1,r5
0000ec  4603              MOV      r3,r0
0000ee  e88d0581          STM      sp,{r0,r7,r8,r10}
0000f2  4648              MOV      r0,r9
0000f4  f7fffffe          BL       _ZN5Dma2d13drawRectangleEttttjjj ; Dma2d::drawRectangle(unsigned short, unsigned short, unsigned short, unsigned short, unsigned, unsigned, unsigned)
                  |L1.248|
0000f8  1c6d              ADDS     r5,r5,#1              ;26
                  |L1.250|
0000fa  ebb50f44          CMP      r5,r4,LSL #1          ;26
0000fe  d3e8              BCC      |L1.210|
000100  1c76              ADDS     r6,r6,#1              ;25
                  |L1.258|
000102  ebb60f44          CMP      r6,r4,LSL #1          ;25
000106  d3e2              BCC      |L1.206|
;;;31     			}
;;;32     		}
;;;33     }
000108  e8bd87ff          POP      {r0-r10,pc}
;;;34     
                          ENDP

                  |L1.268|
                          DCD      rbDMA_2D
                  |L1.272|
                          DCD      rbRCC

                          AREA ||.ARM.exidx||, LINKORDER=||.text||, DATA, READONLY, SECTYPE={SHT_ARM_EXIDX}, ALIGN=2

                          REQUIRE __aeabi_unwind_cpp_pr0
                          REQUIRE __aeabi_unwind_cpp_pr0
                          DCD      0x00000066
                          RELOC 42, ||.text||
                          DCD      0x8000afb0
                          DCD      0x000000ba
                          RELOC 42, ||.text||
                          DCD      0x8003aeb0
